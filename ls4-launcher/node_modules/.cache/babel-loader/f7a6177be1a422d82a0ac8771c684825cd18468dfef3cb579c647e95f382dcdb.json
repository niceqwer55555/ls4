{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport Vue from \"vue\";\nconst httpPrefix = \"http://\";\nconst httpsPrefix = \"https://\";\nexport default {\n  clearUser(state) {\n    state.user = {};\n  },\n  clearToken(state) {\n    state.token = \"\";\n  },\n  clearFriends(state) {\n    state.friendList = [];\n    state.friendOut = [];\n    state.friendIn = [];\n  },\n  clearChats(state) {\n    state.privateChat = {\n      chatMessages: [],\n      openChats: []\n    };\n  },\n  clearLobby(state) {\n    state.lobby = {};\n    state.lobbyChatMessages = [];\n    state.lobbyOwner = false;\n    state.lobbyInvites = [];\n  },\n  setUser(state, userObj) {\n    state.user = userObj;\n  },\n  setUserIcon(state, iconId) {\n    state.user.summonerIconId = iconId;\n  },\n  setUserMotto(state, motto) {\n    state.user.summonerMotto = motto;\n  },\n  setUserStatus(state, status) {\n    state.user.summonerStatus = status;\n  },\n  setToken(state, token) {\n    state.token = token;\n  },\n  setAPIServerHost(state, apiServerHost) {\n    if (apiServerHost.includes(\":\")) {\n      let host = apiServerHost.split(\":\");\n      state.config.api.host = httpPrefix + host[0];\n      state.config.api.port = host[1];\n    } else {\n      state.config.api.host = httpsPrefix + apiServerHost;\n      state.config.api.port = 443;\n    }\n  },\n  setCDNServerHost(state, cdnServerHost) {\n    if (cdnServerHost.includes(\":\")) {\n      let host = cdnServerHost.split(\":\");\n      state.config.download.host = httpPrefix + host[0];\n      state.config.download.port = host[1];\n    } else {\n      state.config.download.host = httpsPrefix + cdnServerHost;\n      state.config.download.port = 443;\n    }\n  },\n  setClientPath(state, clientPath) {\n    state.config.path.client = clientPath;\n  },\n  setRememberToken(state, token) {\n    state.rememberToken = token;\n  },\n  setFilterShowFriend(state, obj) {\n    state.friendList[obj.index].shouldShow = obj.state;\n  },\n  setFilterShowChampion(state, obj) {\n    state.collection.champions[obj.index].shouldShow = obj.state;\n  },\n  setSocialAction(state, type) {\n    state.socialAction = type;\n  },\n  setSocketManager(state, manager) {\n    state.socketManager = manager;\n  },\n  setCollectionChampions(state, champions) {\n    champions.forEach(c => c.shouldShow = true);\n    state.collection.champions = champions;\n  },\n  setSelectedChampion(state, champion) {\n    state.collection.selectedChampion = champion;\n  },\n  setCollectionIcons(state, icons) {\n    state.collection.icons = icons;\n  },\n  setPrivateChatClosed(state, recipient) {\n    state.privateChat.openChats = state.privateChat.openChats.filter(chat => {\n      return chat.summonerName != recipient.summonerName;\n    });\n  },\n  setPrivateChatOpen(state, recipient) {\n    state.privateChat.openChats = [...state.privateChat.openChats, {\n      ...recipient,\n      shows: true\n    }];\n  },\n  setPrivateChatStatus(state, change) {\n    state.privateChat.openChats = state.privateChat.openChats.map(chat => {\n      if (chat.summonerName == change.summonerName) {\n        switch (change.change) {\n          case \"toggle\":\n            chat.shows = !chat.shows;\n            break;\n          case \"close\":\n            chat.shows = false;\n            break;\n          case \"open\":\n            chat.shows = true;\n            break;\n          default:\n            console.warn(\"Unknown chat change.\");\n            break;\n        }\n      }\n      return chat;\n    });\n  },\n  setPrivateChatReadMessages(state, recipient) {\n    let msgs = state.privateChat.chatMessages[recipient.summonerName];\n    if (msgs) {\n      msgs.forEach(message => {\n        message.read = true;\n      });\n      Vue.set(state.privateChat.chatMessages, recipient.summonerName, msgs);\n    }\n  },\n  clearLobbyTimers(state) {\n    state.lobbyQueueTime = 1;\n    clearInterval(state.lobbyQueueTimer);\n    state.lobbyQueueTimer = null;\n  },\n  clearMatchFoundState(state) {\n    state.matchFoundState = {\n      accepted: 0,\n      pending: 10,\n      denied: 0\n    };\n  },\n  setLobbyTimers(state) {\n    state.lobbyQueueTimer = setInterval(() => {\n      state.lobbyQueueTime += 1;\n    }, 1000);\n  },\n  setQueueCount(state, queueCount) {\n    state.lobbyQueueCount = queueCount;\n  },\n  setServerCount(state, serverCount) {\n    state.serverCount = serverCount;\n  },\n  changeBackgroundState(state, bgstate) {\n    state.backgroundState = bgstate;\n  },\n  deductUserCoins(state, deductable) {\n    state.user.s4Coins -= deductable;\n  },\n  setSidebarComponent(state, component) {\n    if (state.sidebarComponent == component) {\n      state.sidebarComponent = \"hidden\";\n    } else {\n      state.sidebarComponent = component;\n    }\n  }\n};","map":{"version":3,"names":["Vue","httpPrefix","httpsPrefix","clearUser","state","user","clearToken","token","clearFriends","friendList","friendOut","friendIn","clearChats","privateChat","chatMessages","openChats","clearLobby","lobby","lobbyChatMessages","lobbyOwner","lobbyInvites","setUser","userObj","setUserIcon","iconId","summonerIconId","setUserMotto","motto","summonerMotto","setUserStatus","status","summonerStatus","setToken","setAPIServerHost","apiServerHost","includes","host","split","config","api","port","setCDNServerHost","cdnServerHost","download","setClientPath","clientPath","path","client","setRememberToken","rememberToken","setFilterShowFriend","obj","index","shouldShow","setFilterShowChampion","collection","champions","setSocialAction","type","socialAction","setSocketManager","manager","socketManager","setCollectionChampions","forEach","c","setSelectedChampion","champion","selectedChampion","setCollectionIcons","icons","setPrivateChatClosed","recipient","filter","chat","summonerName","setPrivateChatOpen","shows","setPrivateChatStatus","change","map","console","warn","setPrivateChatReadMessages","msgs","message","read","set","clearLobbyTimers","lobbyQueueTime","clearInterval","lobbyQueueTimer","clearMatchFoundState","matchFoundState","accepted","pending","denied","setLobbyTimers","setInterval","setQueueCount","queueCount","lobbyQueueCount","setServerCount","serverCount","changeBackgroundState","bgstate","backgroundState","deductUserCoins","deductable","s4Coins","setSidebarComponent","component","sidebarComponent"],"sources":["D:/game/lol/ls4/ls4-launcher/src/store/mutations/systemMutations.js"],"sourcesContent":["import Vue from \"vue\";\r\n\r\nconst httpPrefix = \"http://\";\r\nconst httpsPrefix = \"https://\";\r\n\r\nexport default {\r\n  clearUser(state) {\r\n    state.user = {};\r\n  },\r\n  clearToken(state) {\r\n    state.token = \"\";\r\n  },\r\n  clearFriends(state) {\r\n    state.friendList = [];\r\n    state.friendOut = [];\r\n    state.friendIn = [];\r\n  },\r\n  clearChats(state) {\r\n    state.privateChat = {\r\n      chatMessages: [],\r\n      openChats: []\r\n    };\r\n  },\r\n  clearLobby(state) {\r\n    state.lobby = {};\r\n    state.lobbyChatMessages = [];\r\n    state.lobbyOwner = false;\r\n    state.lobbyInvites = [];\r\n  },\r\n  setUser(state, userObj) {\r\n    state.user = userObj;\r\n  },\r\n  setUserIcon(state, iconId) {\r\n    state.user.summonerIconId = iconId;\r\n  },\r\n  setUserMotto(state, motto) {\r\n    state.user.summonerMotto = motto;\r\n  },\r\n  setUserStatus(state, status) {\r\n    state.user.summonerStatus = status;\r\n  },\r\n  setToken(state, token) {\r\n    state.token = token;\r\n  },\r\n  setAPIServerHost(state, apiServerHost) {\r\n    if (apiServerHost.includes(\":\")) {\r\n      let host = apiServerHost.split(\":\");\r\n      state.config.api.host = httpPrefix + host[0];\r\n      state.config.api.port = host[1];\r\n    } else {\r\n      state.config.api.host = httpsPrefix + apiServerHost;\r\n      state.config.api.port = 443;\r\n    }\r\n  },\r\n  setCDNServerHost(state, cdnServerHost) {\r\n    if (cdnServerHost.includes(\":\")) {\r\n      let host = cdnServerHost.split(\":\");\r\n      state.config.download.host = httpPrefix + host[0];\r\n      state.config.download.port = host[1];\r\n    } else {\r\n      state.config.download.host = httpsPrefix + cdnServerHost;\r\n      state.config.download.port = 443;\r\n    }\r\n  },\r\n  setClientPath(state, clientPath) {\r\n    state.config.path.client = clientPath;\r\n  },\r\n  setRememberToken(state, token) {\r\n    state.rememberToken = token;\r\n  },\r\n  setFilterShowFriend(state, obj) {\r\n    state.friendList[obj.index].shouldShow = obj.state;\r\n  },\r\n  setFilterShowChampion(state, obj) {\r\n    state.collection.champions[obj.index].shouldShow = obj.state;\r\n  },\r\n  setSocialAction(state, type) {\r\n    state.socialAction = type;\r\n  },\r\n  setSocketManager(state, manager) {\r\n    state.socketManager = manager;\r\n  },\r\n  setCollectionChampions(state, champions) {\r\n    champions.forEach(c => (c.shouldShow = true));\r\n    state.collection.champions = champions;\r\n  },\r\n  setSelectedChampion(state, champion) {\r\n    state.collection.selectedChampion = champion;\r\n  },\r\n  setCollectionIcons(state, icons) {\r\n    state.collection.icons = icons;\r\n  },\r\n  setPrivateChatClosed(state, recipient) {\r\n    state.privateChat.openChats = state.privateChat.openChats.filter(chat => {\r\n      return chat.summonerName != recipient.summonerName;\r\n    });\r\n  },\r\n  setPrivateChatOpen(state, recipient) {\r\n    state.privateChat.openChats = [\r\n      ...state.privateChat.openChats,\r\n      { ...recipient, shows: true }\r\n    ];\r\n  },\r\n  setPrivateChatStatus(state, change) {\r\n    state.privateChat.openChats = state.privateChat.openChats.map(chat => {\r\n      if (chat.summonerName == change.summonerName) {\r\n        switch (change.change) {\r\n          case \"toggle\":\r\n            chat.shows = !chat.shows;\r\n            break;\r\n\r\n          case \"close\":\r\n            chat.shows = false;\r\n            break;\r\n\r\n          case \"open\":\r\n            chat.shows = true;\r\n            break;\r\n\r\n          default:\r\n            console.warn(\"Unknown chat change.\");\r\n            break;\r\n        }\r\n      }\r\n\r\n      return chat;\r\n    });\r\n  },\r\n  setPrivateChatReadMessages(state, recipient) {\r\n    let msgs = state.privateChat.chatMessages[recipient.summonerName];\r\n    if (msgs) {\r\n      msgs.forEach(message => {\r\n        message.read = true;\r\n      });\r\n\r\n      Vue.set(state.privateChat.chatMessages, recipient.summonerName, msgs);\r\n    }\r\n  },\r\n  clearLobbyTimers(state) {\r\n    state.lobbyQueueTime = 1;\r\n    clearInterval(state.lobbyQueueTimer);\r\n    state.lobbyQueueTimer = null;\r\n  },\r\n  clearMatchFoundState(state) {\r\n    state.matchFoundState = {\r\n      accepted: 0,\r\n      pending: 10,\r\n      denied: 0\r\n    };\r\n  },\r\n  setLobbyTimers(state) {\r\n    state.lobbyQueueTimer = setInterval(() => {\r\n      state.lobbyQueueTime += 1;\r\n    }, 1000);\r\n  },\r\n  setQueueCount(state, queueCount) {\r\n    state.lobbyQueueCount = queueCount;\r\n  },\r\n  setServerCount(state, serverCount) {\r\n    state.serverCount = serverCount;\r\n  },\r\n  changeBackgroundState(state, bgstate) {\r\n    state.backgroundState = bgstate;\r\n  },\r\n  deductUserCoins(state, deductable) {\r\n    state.user.s4Coins -= deductable;\r\n  },\r\n  setSidebarComponent(state, component) {\r\n    if (state.sidebarComponent == component) {\r\n      state.sidebarComponent = \"hidden\";\r\n    } else {\r\n      state.sidebarComponent = component;\r\n    }\r\n  }\r\n};\r\n"],"mappings":";;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AAErB,MAAMC,UAAU,GAAG,SAAS;AAC5B,MAAMC,WAAW,GAAG,UAAU;AAE9B,eAAe;EACbC,SAASA,CAACC,KAAK,EAAE;IACfA,KAAK,CAACC,IAAI,GAAG,CAAC,CAAC;EACjB,CAAC;EACDC,UAAUA,CAACF,KAAK,EAAE;IAChBA,KAAK,CAACG,KAAK,GAAG,EAAE;EAClB,CAAC;EACDC,YAAYA,CAACJ,KAAK,EAAE;IAClBA,KAAK,CAACK,UAAU,GAAG,EAAE;IACrBL,KAAK,CAACM,SAAS,GAAG,EAAE;IACpBN,KAAK,CAACO,QAAQ,GAAG,EAAE;EACrB,CAAC;EACDC,UAAUA,CAACR,KAAK,EAAE;IAChBA,KAAK,CAACS,WAAW,GAAG;MAClBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,UAAUA,CAACZ,KAAK,EAAE;IAChBA,KAAK,CAACa,KAAK,GAAG,CAAC,CAAC;IAChBb,KAAK,CAACc,iBAAiB,GAAG,EAAE;IAC5Bd,KAAK,CAACe,UAAU,GAAG,KAAK;IACxBf,KAAK,CAACgB,YAAY,GAAG,EAAE;EACzB,CAAC;EACDC,OAAOA,CAACjB,KAAK,EAAEkB,OAAO,EAAE;IACtBlB,KAAK,CAACC,IAAI,GAAGiB,OAAO;EACtB,CAAC;EACDC,WAAWA,CAACnB,KAAK,EAAEoB,MAAM,EAAE;IACzBpB,KAAK,CAACC,IAAI,CAACoB,cAAc,GAAGD,MAAM;EACpC,CAAC;EACDE,YAAYA,CAACtB,KAAK,EAAEuB,KAAK,EAAE;IACzBvB,KAAK,CAACC,IAAI,CAACuB,aAAa,GAAGD,KAAK;EAClC,CAAC;EACDE,aAAaA,CAACzB,KAAK,EAAE0B,MAAM,EAAE;IAC3B1B,KAAK,CAACC,IAAI,CAAC0B,cAAc,GAAGD,MAAM;EACpC,CAAC;EACDE,QAAQA,CAAC5B,KAAK,EAAEG,KAAK,EAAE;IACrBH,KAAK,CAACG,KAAK,GAAGA,KAAK;EACrB,CAAC;EACD0B,gBAAgBA,CAAC7B,KAAK,EAAE8B,aAAa,EAAE;IACrC,IAAIA,aAAa,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC/B,IAAIC,IAAI,GAAGF,aAAa,CAACG,KAAK,CAAC,GAAG,CAAC;MACnCjC,KAAK,CAACkC,MAAM,CAACC,GAAG,CAACH,IAAI,GAAGnC,UAAU,GAAGmC,IAAI,CAAC,CAAC,CAAC;MAC5ChC,KAAK,CAACkC,MAAM,CAACC,GAAG,CAACC,IAAI,GAAGJ,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACLhC,KAAK,CAACkC,MAAM,CAACC,GAAG,CAACH,IAAI,GAAGlC,WAAW,GAAGgC,aAAa;MACnD9B,KAAK,CAACkC,MAAM,CAACC,GAAG,CAACC,IAAI,GAAG,GAAG;IAC7B;EACF,CAAC;EACDC,gBAAgBA,CAACrC,KAAK,EAAEsC,aAAa,EAAE;IACrC,IAAIA,aAAa,CAACP,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC/B,IAAIC,IAAI,GAAGM,aAAa,CAACL,KAAK,CAAC,GAAG,CAAC;MACnCjC,KAAK,CAACkC,MAAM,CAACK,QAAQ,CAACP,IAAI,GAAGnC,UAAU,GAAGmC,IAAI,CAAC,CAAC,CAAC;MACjDhC,KAAK,CAACkC,MAAM,CAACK,QAAQ,CAACH,IAAI,GAAGJ,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACLhC,KAAK,CAACkC,MAAM,CAACK,QAAQ,CAACP,IAAI,GAAGlC,WAAW,GAAGwC,aAAa;MACxDtC,KAAK,CAACkC,MAAM,CAACK,QAAQ,CAACH,IAAI,GAAG,GAAG;IAClC;EACF,CAAC;EACDI,aAAaA,CAACxC,KAAK,EAAEyC,UAAU,EAAE;IAC/BzC,KAAK,CAACkC,MAAM,CAACQ,IAAI,CAACC,MAAM,GAAGF,UAAU;EACvC,CAAC;EACDG,gBAAgBA,CAAC5C,KAAK,EAAEG,KAAK,EAAE;IAC7BH,KAAK,CAAC6C,aAAa,GAAG1C,KAAK;EAC7B,CAAC;EACD2C,mBAAmBA,CAAC9C,KAAK,EAAE+C,GAAG,EAAE;IAC9B/C,KAAK,CAACK,UAAU,CAAC0C,GAAG,CAACC,KAAK,CAAC,CAACC,UAAU,GAAGF,GAAG,CAAC/C,KAAK;EACpD,CAAC;EACDkD,qBAAqBA,CAAClD,KAAK,EAAE+C,GAAG,EAAE;IAChC/C,KAAK,CAACmD,UAAU,CAACC,SAAS,CAACL,GAAG,CAACC,KAAK,CAAC,CAACC,UAAU,GAAGF,GAAG,CAAC/C,KAAK;EAC9D,CAAC;EACDqD,eAAeA,CAACrD,KAAK,EAAEsD,IAAI,EAAE;IAC3BtD,KAAK,CAACuD,YAAY,GAAGD,IAAI;EAC3B,CAAC;EACDE,gBAAgBA,CAACxD,KAAK,EAAEyD,OAAO,EAAE;IAC/BzD,KAAK,CAAC0D,aAAa,GAAGD,OAAO;EAC/B,CAAC;EACDE,sBAAsBA,CAAC3D,KAAK,EAAEoD,SAAS,EAAE;IACvCA,SAAS,CAACQ,OAAO,CAACC,CAAC,IAAKA,CAAC,CAACZ,UAAU,GAAG,IAAK,CAAC;IAC7CjD,KAAK,CAACmD,UAAU,CAACC,SAAS,GAAGA,SAAS;EACxC,CAAC;EACDU,mBAAmBA,CAAC9D,KAAK,EAAE+D,QAAQ,EAAE;IACnC/D,KAAK,CAACmD,UAAU,CAACa,gBAAgB,GAAGD,QAAQ;EAC9C,CAAC;EACDE,kBAAkBA,CAACjE,KAAK,EAAEkE,KAAK,EAAE;IAC/BlE,KAAK,CAACmD,UAAU,CAACe,KAAK,GAAGA,KAAK;EAChC,CAAC;EACDC,oBAAoBA,CAACnE,KAAK,EAAEoE,SAAS,EAAE;IACrCpE,KAAK,CAACS,WAAW,CAACE,SAAS,GAAGX,KAAK,CAACS,WAAW,CAACE,SAAS,CAAC0D,MAAM,CAACC,IAAI,IAAI;MACvE,OAAOA,IAAI,CAACC,YAAY,IAAIH,SAAS,CAACG,YAAY;IACpD,CAAC,CAAC;EACJ,CAAC;EACDC,kBAAkBA,CAACxE,KAAK,EAAEoE,SAAS,EAAE;IACnCpE,KAAK,CAACS,WAAW,CAACE,SAAS,GAAG,CAC5B,GAAGX,KAAK,CAACS,WAAW,CAACE,SAAS,EAC9B;MAAE,GAAGyD,SAAS;MAAEK,KAAK,EAAE;IAAK,CAAC,CAC9B;EACH,CAAC;EACDC,oBAAoBA,CAAC1E,KAAK,EAAE2E,MAAM,EAAE;IAClC3E,KAAK,CAACS,WAAW,CAACE,SAAS,GAAGX,KAAK,CAACS,WAAW,CAACE,SAAS,CAACiE,GAAG,CAACN,IAAI,IAAI;MACpE,IAAIA,IAAI,CAACC,YAAY,IAAII,MAAM,CAACJ,YAAY,EAAE;QAC5C,QAAQI,MAAM,CAACA,MAAM;UACnB,KAAK,QAAQ;YACXL,IAAI,CAACG,KAAK,GAAG,CAACH,IAAI,CAACG,KAAK;YACxB;UAEF,KAAK,OAAO;YACVH,IAAI,CAACG,KAAK,GAAG,KAAK;YAClB;UAEF,KAAK,MAAM;YACTH,IAAI,CAACG,KAAK,GAAG,IAAI;YACjB;UAEF;YACEI,OAAO,CAACC,IAAI,CAAC,sBAAsB,CAAC;YACpC;QACJ;MACF;MAEA,OAAOR,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACDS,0BAA0BA,CAAC/E,KAAK,EAAEoE,SAAS,EAAE;IAC3C,IAAIY,IAAI,GAAGhF,KAAK,CAACS,WAAW,CAACC,YAAY,CAAC0D,SAAS,CAACG,YAAY,CAAC;IACjE,IAAIS,IAAI,EAAE;MACRA,IAAI,CAACpB,OAAO,CAACqB,OAAO,IAAI;QACtBA,OAAO,CAACC,IAAI,GAAG,IAAI;MACrB,CAAC,CAAC;MAEFtF,GAAG,CAACuF,GAAG,CAACnF,KAAK,CAACS,WAAW,CAACC,YAAY,EAAE0D,SAAS,CAACG,YAAY,EAAES,IAAI,CAAC;IACvE;EACF,CAAC;EACDI,gBAAgBA,CAACpF,KAAK,EAAE;IACtBA,KAAK,CAACqF,cAAc,GAAG,CAAC;IACxBC,aAAa,CAACtF,KAAK,CAACuF,eAAe,CAAC;IACpCvF,KAAK,CAACuF,eAAe,GAAG,IAAI;EAC9B,CAAC;EACDC,oBAAoBA,CAACxF,KAAK,EAAE;IAC1BA,KAAK,CAACyF,eAAe,GAAG;MACtBC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,cAAcA,CAAC7F,KAAK,EAAE;IACpBA,KAAK,CAACuF,eAAe,GAAGO,WAAW,CAAC,MAAM;MACxC9F,KAAK,CAACqF,cAAc,IAAI,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACDU,aAAaA,CAAC/F,KAAK,EAAEgG,UAAU,EAAE;IAC/BhG,KAAK,CAACiG,eAAe,GAAGD,UAAU;EACpC,CAAC;EACDE,cAAcA,CAAClG,KAAK,EAAEmG,WAAW,EAAE;IACjCnG,KAAK,CAACmG,WAAW,GAAGA,WAAW;EACjC,CAAC;EACDC,qBAAqBA,CAACpG,KAAK,EAAEqG,OAAO,EAAE;IACpCrG,KAAK,CAACsG,eAAe,GAAGD,OAAO;EACjC,CAAC;EACDE,eAAeA,CAACvG,KAAK,EAAEwG,UAAU,EAAE;IACjCxG,KAAK,CAACC,IAAI,CAACwG,OAAO,IAAID,UAAU;EAClC,CAAC;EACDE,mBAAmBA,CAAC1G,KAAK,EAAE2G,SAAS,EAAE;IACpC,IAAI3G,KAAK,CAAC4G,gBAAgB,IAAID,SAAS,EAAE;MACvC3G,KAAK,CAAC4G,gBAAgB,GAAG,QAAQ;IACnC,CAAC,MAAM;MACL5G,KAAK,CAAC4G,gBAAgB,GAAGD,SAAS;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}