{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  props: {\n    summoner: Object\n  },\n  methods: {\n    openChatWindow() {\n      this.$store.dispatch(\"setPrivateChatOpen\", this.summoner).then(didOpen => {\n        this.$sound.template(\"OVERVIEW_CLICK\");\n        if (didOpen) {\n          this.$socket.sendSystemMessage(\"MESSAGE_PRIVATE_GET\", {\n            data: this.summoner\n          }, (response, error) => {\n            if (error) {\n              console.log(\"Flyback error:\");\n              console.log(error);\n            } else {\n              this.$store.dispatch(\"setPrivateChatReadMessages\", this.summoner);\n            }\n          });\n        }\n      });\n    },\n    showContextMenu(event) {\n      const positioning = `top: ${event.clientY}px;left: ${event.clientX - 150}px`;\n      const params = {\n        friend: this.summoner,\n        positioning: positioning\n      };\n      this.$modal.friendcontextmenu.show(params);\n    },\n    formatStatus(status, motto) {\n      switch (status) {\n        case \"ONLINE\":\n          return motto ? motto : this.$translate.text(`FRO_STATUS_${status}`);\n        case \"AWAY\":\n          return motto ? motto : this.$translate.text(`FRO_STATUS_${status}`);\n        default:\n          return this.$translate.text(`FRO_STATUS_${status}`);\n      }\n    }\n  },\n  computed: mapState({\n    unreadChatMessages(state) {\n      if (state.privateChat.chatMessages[this.summoner.summonerName]) {\n        let unread = 0;\n        state.privateChat.chatMessages[this.summoner.summonerName].forEach(message => {\n          if (message.read === false) {\n            unread++;\n          }\n        });\n        return unread;\n      } else {\n        return 0;\n      }\n    }\n  })\n};","map":{"version":3,"names":["mapState","props","summoner","Object","methods","openChatWindow","$store","dispatch","then","didOpen","$sound","template","$socket","sendSystemMessage","data","response","error","console","log","showContextMenu","event","positioning","clientY","clientX","params","friend","$modal","friendcontextmenu","show","formatStatus","status","motto","$translate","text","computed","unreadChatMessages","state","privateChat","chatMessages","summonerName","unread","forEach","message","read"],"sources":["src/components/SideBar/FriendList/Friend.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"friend\"\r\n    v-if=\"summoner.shouldShow\"\r\n    v-bind:class=\"summoner.summonerStatus.toLowerCase()\"\r\n    @contextmenu=\"showContextMenu($event)\"\r\n    @click=\"openChatWindow()\"\r\n  >\r\n    <div class=\"icon\">\r\n      <img v-bind:src=\"summoner.summonerIconUrl\" alt=\"summonerIcon\" />\r\n    </div>\r\n    <div class=\"details\">\r\n      <div class=\"blob\"></div>\r\n      <div class=\"name\">{{ summoner.summonerName }}</div>\r\n      <div class=\"motto\">\r\n        {{ formatStatus(summoner.summonerStatus, summoner.summonerMotto) }}\r\n      </div>\r\n    </div>\r\n    <div class=\"unread-messages\" v-if=\"unreadChatMessages > 0\">\r\n      {{ unreadChatMessages }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    summoner: Object\r\n  },\r\n  methods: {\r\n    openChatWindow() {\r\n      this.$store\r\n        .dispatch(\"setPrivateChatOpen\", this.summoner)\r\n        .then(didOpen => {\r\n          this.$sound.template(\"OVERVIEW_CLICK\");\r\n          if (didOpen) {\r\n            this.$socket.sendSystemMessage(\r\n              \"MESSAGE_PRIVATE_GET\",\r\n              { data: this.summoner },\r\n              (response, error) => {\r\n                if (error) {\r\n                  console.log(\"Flyback error:\");\r\n                  console.log(error);\r\n                } else {\r\n                  this.$store.dispatch(\r\n                    \"setPrivateChatReadMessages\",\r\n                    this.summoner\r\n                  );\r\n                }\r\n              }\r\n            );\r\n          }\r\n        });\r\n    },\r\n    showContextMenu(event) {\r\n      const positioning = `top: ${event.clientY}px;left: ${event.clientX -\r\n        150}px`;\r\n      const params = {\r\n        friend: this.summoner,\r\n        positioning: positioning\r\n      };\r\n      this.$modal.friendcontextmenu.show(params);\r\n    },\r\n    formatStatus(status, motto) {\r\n      switch (status) {\r\n        case \"ONLINE\":\r\n          return motto ? motto : this.$translate.text(`FRO_STATUS_${status}`);\r\n\r\n        case \"AWAY\":\r\n          return motto ? motto : this.$translate.text(`FRO_STATUS_${status}`);\r\n\r\n        default:\r\n          return this.$translate.text(`FRO_STATUS_${status}`);\r\n      }\r\n    }\r\n  },\r\n  computed: mapState({\r\n    unreadChatMessages(state) {\r\n      if (state.privateChat.chatMessages[this.summoner.summonerName]) {\r\n        let unread = 0;\r\n        state.privateChat.chatMessages[this.summoner.summonerName].forEach(\r\n          message => {\r\n            if (message.read === false) {\r\n              unread++;\r\n            }\r\n          }\r\n        );\r\n        return unread;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  })\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.friend::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  opacity: 0;\r\n  left: -10px;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: 100% auto;\r\n  background-position: left;\r\n  background-image: url(\"../../../assets/images/friendglow.png\");\r\n  z-index: 5;\r\n  transition: opacity ease-in-out 200ms;\r\n}\r\n\r\n.friend {\r\n  display: flex;\r\n  height: 50px;\r\n  position: relative;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  margin-bottom: 5px;\r\n  background-image: linear-gradient(\r\n    180deg,\r\n    #181f27 0%,\r\n    #121318 15%,\r\n    #020609 50%,\r\n    #030a14 85%,\r\n    #181f27 100%\r\n  );\r\n  cursor: pointer;\r\n  transition: filter ease-in-out 200ms;\r\n}\r\n.friend:hover {\r\n  filter: brightness(1.25);\r\n}\r\n\r\n.friend:hover::after {\r\n  opacity: 0.7;\r\n}\r\n\r\n.friend.offline {\r\n  opacity: 0.5;\r\n}\r\n\r\n.friend .icon {\r\n  height: 100%;\r\n  margin-right: 5px;\r\n  box-sizing: border-box;\r\n  // background-color: #0d2846;\r\n  position: relative;\r\n}\r\n.friend .icon img {\r\n  width: 40px;\r\n  height: 40px;\r\n  // box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.75);\r\n  object-fit: contain;\r\n  object-position: center;\r\n  // border-radius: 50%;\r\n}\r\n\r\n.friend .details {\r\n  display: flex;\r\n  position: relative;\r\n  width: calc(100% - 45px);\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.friend .details .blob {\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-image: url(\"../../../assets/images/status-blob-offline.png\");\r\n  background-size: 100% 100%;\r\n  box-shadow: 1px 1px 3px 2px rgba(0, 0, 0, 0.25);\r\n  position: absolute;\r\n  right: 3px;\r\n  bottom: 3px;\r\n}\r\n\r\n.friend.online .details .blob {\r\n  background-image: url(\"../../../assets/images/status-blob-online.png\");\r\n}\r\n\r\n.friend.away .details .blob {\r\n  background-image: url(\"../../../assets/images/status-blob-away.png\");\r\n}\r\n\r\n.friend.in_champ_select .details .blob,\r\n.friend.in_lobby .details .blob {\r\n  background-image: url(\"../../../assets/images/status-blob-busy.png\");\r\n}\r\n\r\n.friend .details .name {\r\n  color: rgba(245, 245, 245, 1);\r\n  font-family: LoLFont2;\r\n  font-size: 14px;\r\n}\r\n\r\n.friend .details .motto {\r\n  color: rgba(245, 245, 245, 0.25);\r\n  font-family: LoLFont2;\r\n  font-size: 12px;\r\n}\r\n\r\n.friend.online .details .motto {\r\n  color: rgb(78, 160, 86);\r\n  text-shadow: 0 1px 3px rgba(78, 160, 86, 0.75);\r\n}\r\n\r\n.friend.away .details .motto {\r\n  color: rgb(119, 29, 38);\r\n  text-shadow: 0 1px 3px rgba(119, 29, 38, 0.75);\r\n}\r\n\r\n.friend.in_lobby .details .motto,\r\n.friend.in_champ_select .details .motto {\r\n  color: rgb(208, 170, 27);\r\n  text-shadow: 0 1px 3px rgba(208, 170, 27, 0.75);\r\n}\r\n\r\n.friend .unread-messages {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n  border-radius: 7px;\r\n  width: 20px;\r\n  height: 15px;\r\n  box-sizing: border-box;\r\n  padding: 0px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  color: black;\r\n  font-family: LoLFont4;\r\n  background-color: rgba(218, 165, 32, 0.75);\r\n  animation: blink infinite 1s;\r\n}\r\n\r\n@keyframes blink {\r\n  0% {\r\n    filter: brightness(0.7);\r\n  }\r\n  50% {\r\n    filter: brightness(1.2);\r\n  }\r\n  100% {\r\n    filter: brightness(0.7);\r\n  }\r\n}\r\n\r\n// #text {\r\n//   margin-top: 5px;\r\n// }\r\n// #motto {\r\n//   font-size: 0.8rem;\r\n//   color: #6b6b6b;\r\n// }\r\n// #status {\r\n//   font-size: 0.5rem;\r\n//   color: green;\r\n// }\r\n</style>\r\n"],"mappings":";;AAyBA,SAAAA,QAAA;AACA;EACAC,KAAA;IACAC,QAAA,EAAAC;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAC,MAAA,CACAC,QAAA,4BAAAL,QAAA,EACAM,IAAA,CAAAC,OAAA;QACA,KAAAC,MAAA,CAAAC,QAAA;QACA,IAAAF,OAAA;UACA,KAAAG,OAAA,CAAAC,iBAAA,CACA,uBACA;YAAAC,IAAA,OAAAZ;UAAA,GACA,CAAAa,QAAA,EAAAC,KAAA;YACA,IAAAA,KAAA;cACAC,OAAA,CAAAC,GAAA;cACAD,OAAA,CAAAC,GAAA,CAAAF,KAAA;YACA;cACA,KAAAV,MAAA,CAAAC,QAAA,CACA,8BACA,KAAAL,QACA;YACA;UACA,CACA;QACA;MACA;IACA;IACAiB,gBAAAC,KAAA;MACA,MAAAC,WAAA,WAAAD,KAAA,CAAAE,OAAA,YAAAF,KAAA,CAAAG,OAAA,GACA;MACA,MAAAC,MAAA;QACAC,MAAA,OAAAvB,QAAA;QACAmB,WAAA,EAAAA;MACA;MACA,KAAAK,MAAA,CAAAC,iBAAA,CAAAC,IAAA,CAAAJ,MAAA;IACA;IACAK,aAAAC,MAAA,EAAAC,KAAA;MACA,QAAAD,MAAA;QACA;UACA,OAAAC,KAAA,GAAAA,KAAA,QAAAC,UAAA,CAAAC,IAAA,eAAAH,MAAA;QAEA;UACA,OAAAC,KAAA,GAAAA,KAAA,QAAAC,UAAA,CAAAC,IAAA,eAAAH,MAAA;QAEA;UACA,YAAAE,UAAA,CAAAC,IAAA,eAAAH,MAAA;MACA;IACA;EACA;EACAI,QAAA,EAAAlC,QAAA;IACAmC,mBAAAC,KAAA;MACA,IAAAA,KAAA,CAAAC,WAAA,CAAAC,YAAA,MAAApC,QAAA,CAAAqC,YAAA;QACA,IAAAC,MAAA;QACAJ,KAAA,CAAAC,WAAA,CAAAC,YAAA,MAAApC,QAAA,CAAAqC,YAAA,EAAAE,OAAA,CACAC,OAAA;UACA,IAAAA,OAAA,CAAAC,IAAA;YACAH,MAAA;UACA;QACA,CACA;QACA,OAAAA,MAAA;MACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}