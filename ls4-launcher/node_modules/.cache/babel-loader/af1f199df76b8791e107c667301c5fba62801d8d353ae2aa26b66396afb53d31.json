{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nvar path = require(\"path\");\nimport { Client } from \"@stomp/stompjs\";\nimport Vue from \"vue\";\nimport { uuid } from \"uuidv4\";\nimport axios from \"axios\";\nimport router from \"../../Router\";\nimport { ipcRenderer } from \"electron\";\nclass EventEmitter {\n  constructor() {\n    this._events = {};\n  }\n  on(name, listener) {\n    if (!this._events[name]) {\n      this._events[name] = [];\n    }\n    this._events[name].push(listener);\n  }\n  removeListener(name, listenerToRemove) {\n    if (!this._events[name]) {\n      throw new Error(`Can't remove a listener. Event \"${name}\" doesn't exits.`);\n    }\n    const filterListeners = listener => listener !== listenerToRemove;\n    this._events[name] = this._events[name].filter(filterListeners);\n  }\n  emit(name, data) {\n    if (!this._events[name]) {\n      throw new Error(`Can't emit an event. Event \"${name}\" doesn't exits.`);\n    }\n    const fireCallbacks = callback => {\n      callback(data);\n    };\n    this._events[name].forEach(fireCallbacks);\n  }\n}\nexport default class SocketManager {\n  constructor(userObj, state, dispatch, vm) {\n    const config = state.config.api;\n    this.api = config;\n    this.vm = vm;\n    this.state = state;\n    this.wasConnected = false;\n    this.reconnectCount = 0;\n    this.stomp = new Client({\n      brokerURL: `ws://${config.host.replace(/^https?:\\/\\//, \"\")}:${config.port}/socket?token=${state.token}`,\n      onConnect: connectedFrame => {\n        this.emitter.emit(\"connected\", true);\n        this.log(connectedFrame);\n        this.connectToSystem(); // Subscribe to System Destination\n        this.afterConnect();\n        this.wasConnected = true;\n        if (this.reconnectCount >= 1) {\n          // This means we connect after reconnect, refresh to home page\n          if (router.currentRoute.name != \"Home\") {\n            router.push(\"/LoggedIn/home\");\n          }\n          this.vm.$modal.reconnect.hide();\n          this.reconnectCount = 0;\n        }\n      },\n      reconnectDelay: 5000,\n      onWebSocketClose: closed => {\n        if (this.wasConnected) {\n          // Reset wasConnected\n          this.wasConnected = false;\n          if (closed.code != 1000) {\n            // Connection loss happened\n            this.reconnectCount++;\n            this.connectionLoss();\n          }\n        } else {\n          // Connection loss happened on reconnect, increase counter and closeApp on 1 minute\n          this.reconnectCount++;\n          if (this.reconnectCount >= 13) {\n            ipcRenderer.send(\"closeApp\");\n          }\n        }\n      }\n    });\n    this.user = userObj;\n    this.connected = false;\n    this.dispatch = dispatch;\n    this.auth_headers = {\n      headers: {\n        Authorization: `Bearer ${state.token}`\n      }\n    };\n    this.emitter = new EventEmitter();\n    this.callbacks = [];\n    this.isFirstMessage = true;\n    this.lobbysub = null;\n    this.systemsub = null;\n    this.champselectsub = null;\n    Vue.prototype.$socket = this;\n    this.initEvents();\n    this.stomp.activate();\n  }\n  connectionLoss() {\n    // We can keep all data except lobby and chats\n\n    if (router.currentRoute.name != \"Home\") {\n      router.push(\"/LoggedIn/home\");\n    }\n    this.dispatch(\"socketExtraHandler\", {\n      commit: \"clearLobby\"\n    });\n    this.dispatch(\"socketExtraHandler\", {\n      commit: \"clearChats\"\n    });\n    this.dispatch(\"socketExtraHandler\", {\n      commit: \"clearLobbyTimers\"\n    });\n    this.vm.$modal.reconnect.show();\n  }\n\n  /* INITIALIZATIONS */\n  initEvents() {\n    this.emitter.on(\"connected\", () => {\n      this.connected = true;\n      this.afterConnect();\n    });\n  }\n\n  /* SUBSCRIPTIONS */\n  connectToSystem() {\n    this.log(\"Subscribed to /user/queue/system\");\n    this.systemsub = this.stomp.subscribe(\"/user/queue/system\", message => {\n      if (this.isFirstMessage && this.parseMessage(message).messageType != \"USER_LOGGED_IN_ANOTHER_LOCATION\") {\n        this.isFirstMessage = false;\n      }\n      this.recievedSystemMessage(message);\n    });\n  }\n  connectToLobby(lobbyId) {\n    this.log(`Subscribed to /user/queue/lobby${lobbyId}`);\n    this.lobbysub = this.stomp.subscribe(`/user/queue/lobby${lobbyId}`, message => {\n      this.recievedLobbyMessage(message);\n    });\n  }\n  connectToChampSelect(champselectId) {\n    this.log(`Subscribed to /user/queue/champselect${champselectId}`);\n    this.champselectsub = this.stomp.subscribe(`/user/queue/champselect${champselectId}`, message => {\n      this.recievedChampSelectMessage(message);\n    });\n  }\n  disconnectFromSystem() {\n    this.log(`Unsubscribed from /user/queue/system`);\n    this.systemsub.unsubscribe();\n    this.stomp.deactivate();\n  }\n  disconnectFromLobby(lobbyId) {\n    this.log(`Unsubscribed from /user/queue/lobby${lobbyId}`);\n    this.lobbysub.unsubscribe();\n  }\n  disconnectFromChampSelect(champselectId) {\n    this.log(`Unsubscribed from /user/queue/champselect${champselectId}`);\n    this.champselectsub.unsubscribe();\n  }\n\n  /* EVENTS */\n  afterConnect() {\n    // HANDLE STUFF IF NEED BE AFTER CONNECTION\n  }\n\n  /* UTILITIES */\n  parseMessage(message) {\n    return JSON.parse(message.body);\n  }\n  generateMessageCallback(callback, message) {\n    const id = uuid();\n    this.callbacks[id] = {\n      callback: callback,\n      originalMessage: message\n    };\n    return id;\n  }\n  log(message, prefix = null) {\n    const sender = new Error().stack.split(\"\\n\")[2].replace(\" at \", \"\").trim();\n    if (prefix) {\n      console.group([`${prefix}`, `[${sender}]`]);\n    } else {\n      console.group(`[${sender}]`);\n    }\n    console.log(message);\n    console.groupEnd();\n  }\n  recievedError(error) {\n    this.log(error, \"[STOMP][ERROR]\");\n  }\n  startGame(data) {\n    const {\n      spawn\n    } = require(\"child_process\");\n    let executablePath = this.state.config.path.client;\n    // let parameters = [\n    //   '\"\" \"\" \"\" \"' +\n    //     data.ip +\n    //     \" \" +\n    //     data.port +\n    //     \" \" +\n    //     data.blowfish +\n    //     \" \" +\n    //     data.playerId\n    // ];\n\n    // const sub = spawn(executablePath, parameters, {\n    //   detached: true,\n    //   stdio: \"ignore\"\n    // });\n\n    // sub.unref();\n\n    spawn(\"cmd\", [\"/c\", \"start\", \"\", executablePath, \"8394\", \"LoLLauncher.exe\", \"\", data.ip + \" \" + data.port + \" \" + data.blowfish + \" \" + data.playerId], {\n      cwd: path.dirname(executablePath)\n    });\n  }\n\n  /* MESSAGES */\n  recievedSystemMessage(message) {\n    const data = this.parseMessage(message);\n    console.group(\"[RECIEVER][SYSTEM]\", data.messageType);\n    console.log(this.stomp.subscriptions);\n    if (data.id !== null) {\n      const pendingMessage = this.callbacks[data.id];\n      pendingMessage.callback(data.data, data.error, data.messageTimestamp);\n      // TODO: This is a temporary fix to deny lobbies which don't exist anymore. We need to do proper error handling here though. See https://git.jandev.de/leagues4/ls4-launcher/-/issues/91\n      if (!data.error || data.messageType === \"LOBBY_DENY\") {\n        console.groupEnd();\n        this.handleSystemMessage(data, pendingMessage.originalMessage);\n      }\n      delete this.callbacks[data.id];\n      console.groupEnd();\n      return;\n    }\n    switch (data.messageType) {\n      case \"FRIEND_LIST\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendList\", data.data);\n        break;\n      case \"FRIEND_OUT\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendOut\", data.data);\n        break;\n      case \"FRIEND_IN\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendIn\", data.data);\n        break;\n      case \"FRIEND_REMOVE\":\n        console.log(data);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriend\",\n          data: data.data\n        });\n        break;\n      case \"FRIEND_IN_ACCEPT\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendInAccept\", data.data);\n        break;\n      case \"FRIEND_IN_DENY\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendInDeny\", data.data);\n        break;\n      case \"USER_UPDATE_SUMMONER_NAME\":\n        console.log(data);\n        this.dispatch(\"socketRecievedSummonerNameUpdate\", data.data);\n        break;\n      case \"MESSAGE_PRIVATE\":\n        if (!this.state.privateChat.chatMessages[data.data.from]) {\n          this.sendSystemMessage(\"MESSAGE_PRIVATE_GET\", {\n            data: {\n              summonerName: data.data.from\n            },\n            denyHandler: true\n          }, (response, error) => {\n            if (error) {\n              console.log(\"Flyback error:\");\n              console.log(error);\n            }\n            response.forEach((message, index) => {\n              if (index != response.length - 1) {\n                message.read = true;\n              } else {\n                message.read = false;\n              }\n            });\n            console.log(response);\n            this.dispatch(\"socketExtraHandler\", {\n              commit: \"socketSetChatMessagesForRecipient\",\n              data: {\n                messages: {\n                  data: response\n                },\n                recipient: {\n                  summonerName: data.data.from\n                },\n                sound: true\n              }\n            });\n          });\n        } else {\n          this.dispatch(\"socketRecievedPrivateMessage\", data.data);\n        }\n        break;\n      case \"FRIEND_UPDATE\":\n        console.log(data);\n        this.dispatch(\"socketRecievedFriendUpdate\", data.data);\n        break;\n      case \"LOBBY_INVITE\":\n        console.log(data);\n        this.dispatch(\"socketRecievedLobbyInvite\", data.data);\n        this.vm.$sound.template(\"OVERVIEW_INVITE\");\n        break;\n      case \"LOBBY_INVITE_REVOKE\":\n        console.log(data.data);\n        this.dispatch(\"socketReceivedLobbyInviteRevoke\", data.data);\n        break;\n      case \"USER_LOGGED_IN_ANOTHER_LOCATION\":\n        if (!this.isFirstMessage) {\n          ipcRenderer.send(\"closeApp\");\n        }\n        break;\n      case \"USER_BAN\":\n        ipcRenderer.send(\"closeApp\");\n        break;\n      case \"KILL\":\n        ipcRenderer.send(\"closeApp\");\n        break;\n      default:\n        console.log(data);\n        throw new Error(`Could not handle unhandled message type: ${data.messageType}`);\n    }\n    console.groupEnd();\n  }\n  recievedLobbyMessage(message) {\n    const data = this.parseMessage(message);\n    console.group(\"[RECIEVER][LOBBY]\", data.messageType);\n    if (data.id !== null) {\n      const pendingMessage = this.callbacks[data.id];\n      pendingMessage.callback(data.data, data.error);\n      if (!data.error) {\n        console.groupEnd();\n        this.handleLobbyMessage(data, pendingMessage.originalMessage);\n      }\n      delete this.callbacks[data.id];\n      console.groupEnd();\n      return;\n    }\n    switch (data.messageType) {\n      case \"LOBBY_CHAT\":\n        this.dispatch(\"socketRecievedLobbyChat\", data.data);\n        break;\n      case \"LOBBY_UPDATE\":\n        console.log(data.data);\n        if (this.state.lobby && this.state.lobby.inQueue == false && data.data.inQueue == true) {\n          this.dispatch(\"setLobbyTimers\");\n        } else if (this.state.lobby && this.state.lobby.inQueue == true && data.data.inQueue == false) {\n          this.dispatch(\"clearLobbyTimers\");\n        }\n        if (!this.state.lobby.isCustom && data.data.isCustom) {\n          router.push(\"/lobbyCustom\");\n        } else if (this.state.lobby.isCustom && !data.data.isCustom) {\n          router.push(\"/lobby\");\n        }\n        this.dispatch(\"socketRecievedLobbyUpdate\", data.data);\n        break;\n      case \"LOBBY_KICK\":\n        router.push(\"/LoggedIn/home\");\n        this.disconnectFromLobby(this.state.lobby.uuid);\n        this.dispatch(\"socketKickedFromLobby\");\n        break;\n      case \"LOBBY_MATCH_FOUND\":\n        console.log(data.data);\n        this.vm.$modal.matchmaking.show();\n        break;\n      case \"LOBBY_MATCH_FOUND_UPDATE\":\n        console.log(data.data);\n        // let dummyData = {\n        //   \"accepted\": 4,\n        //   \"pending\": 4,\n        //   \"denied\": 2\n        // }\n        this.dispatch(\"socketRecievedMatchFoundUpdate\", data.data);\n        break;\n      case \"LOBBY_CHAMPSELECT_SUBSCRIBE\":\n        console.log(data.data);\n        this.connectToChampSelect(data.data.uuid);\n        this.dispatch(\"socketSetUserChampSelect\", data.data);\n        router.push(\"/champselect\");\n        break;\n      default:\n        console.log(data);\n        throw new Error(`Could not handle unhandled message type: ${data.messageType}`);\n    }\n    console.groupEnd();\n  }\n  recievedChampSelectMessage(message) {\n    const data = this.parseMessage(message);\n    console.group(\"[RECIEVER][CHAMPSELECT]\", data.messageType);\n    if (data.id !== null) {\n      const pendingMessage = this.callbacks[data.id];\n      pendingMessage.callback(data.data, data.error);\n      if (!data.error) {\n        console.groupEnd();\n        this.handleChampSelectMessage(data, pendingMessage.originalMessage);\n      }\n      delete this.callbacks[data.id];\n      console.groupEnd();\n      return;\n    }\n    switch (data.messageType) {\n      case \"CHAMPSELECT_CHAT\":\n        this.dispatch(\"socketRecievedChampSelectChat\", data.data);\n        break;\n      case \"CHAMPSELECT_UPDATE\":\n        console.log(data.data);\n        this.dispatch(\"socketSetUserChampSelect\", data.data);\n        break;\n      case \"CHAMPSELECT_ABANDON\":\n        this.disconnectFromChampSelect(this.state.champselect.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketClearChampSelectData\",\n          data: null\n        });\n        if (this.state.lobby && this.state.lobby.isCustom) {\n          router.push(\"/lobbyCustom\");\n        } else {\n          router.push(\"/Lobby\");\n        }\n        break;\n      case \"CHAMPSELECT_GAME_START\":\n        this.disconnectFromChampSelect(this.state.champselect.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketClearChampSelectData\",\n          data: null\n        });\n        this.disconnectFromLobby(this.state.lobby.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketClearLobbyData\",\n          data: null\n        });\n        router.push(\"/LoggedIn/home\");\n        if (data.data && data.data.ip) {\n          this.startGame(data.data);\n        }\n        break;\n      default:\n        console.log(data);\n        throw new Error(`Could not handle unhandled message type: ${data.messageType}`);\n    }\n    console.groupEnd();\n  }\n\n  /* SENDERS */\n  sendSystemMessage(type, params, flyback = null) {\n    console.group(\"[SENDER][SYSTEM]\", type);\n    let message = new Object();\n    let callback;\n    let payload;\n    switch (type) {\n      case \"FRIEND_OUT\":\n        if (this.state.friendIn.filter(friend => {\n          return friend.summonerName == params.data;\n        }).length > 0) {\n          const userFix = this.state.friendIn.filter(friend => {\n            return friend.summonerName == params.data;\n          })[0];\n          this.dispatch(\"socketExtraHandler\", {\n            commit: \"socketAddFriend\",\n            data: userFix\n          });\n          this.dispatch(\"socketExtraHandler\", {\n            commit: \"socketDelFriendIn\",\n            data: userFix\n          });\n          if (flyback) {\n            callback = flyback;\n            payload = params;\n          } else {\n            callback = () => {\n              console.log(\"Recieved response\");\n            };\n          }\n        } else {\n          if (flyback) {\n            callback = flyback;\n            payload = params;\n          } else {\n            callback = () => {\n              console.log(\"Recieved response\");\n            };\n          }\n        }\n        break;\n      case \"FRIEND_IN_ACCEPT\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: params.data.summonerName\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"FRIEND_IN_DENY\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: params.data.summonerName\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"FRIEND_REMOVE\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: params.data.summonerName\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"FRIEND_BLOCK\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: params.data.summonerName\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"MESSAGE_PRIVATE_GET\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: params.data.summonerName\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"MESSAGE_PRIVATE\":\n        if (flyback) {\n          callback = flyback;\n          payload = {\n            data: {\n              to: params.data.summonerName,\n              data: params.message\n            }\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"USER_UPDATE_ICON\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"USER_UPDATE_MOTTO\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"USER_UPDATE_STATUS\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"USER_BAN\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_CREATE\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_ACCEPT\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_DENY\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      default:\n        throw new Error(`Could not send unhandled message type: ${type}`);\n    }\n    const messageCallbackId = this.generateMessageCallback(callback, {\n      ...params,\n      messageType: type\n    });\n    message = {\n      ...payload,\n      id: messageCallbackId,\n      messageType: type\n    };\n    this.stomp.publish({\n      destination: \"/out/system\",\n      body: JSON.stringify(message)\n    });\n    console.groupEnd();\n  }\n  sendLobbyMessage(type, params, flyback = null) {\n    console.group(\"[SENDER][LOBBY]\", type);\n    let message = new Object();\n    let callback;\n    let payload;\n    switch (type) {\n      case \"LOBBY_CHAT\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_INVITE\":\n        if (flyback) {\n          callback = flyback;\n          let summ = params.data.summonerName;\n          payload = {\n            data: summ\n          };\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_KICK\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_CHANGE_TYPE\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_LEAVE\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_MATCHMAKING_START\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_MATCHMAKING_STOP\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_SWITCH_TEAM\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_CHAMPSELECT_ACCEPT\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"LOBBY_CHAMPSELECT_DENY\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      default:\n        throw new Error(`Could not send unhandled message type: ${type}`);\n    }\n    const messageCallbackId = this.generateMessageCallback(callback, {\n      ...params,\n      messageType: type\n    });\n    message = {\n      ...payload,\n      id: messageCallbackId,\n      messageType: type\n    };\n    this.stomp.publish({\n      destination: \"/out/lobby\",\n      body: JSON.stringify(message)\n    });\n    console.groupEnd();\n  }\n  sendChampSelectMessage(type, params, flyback = null) {\n    console.group(\"[SENDER][CHAMPSELECT]\", type);\n    let message = new Object();\n    let callback;\n    let payload;\n    switch (type) {\n      case \"CHAMPSELECT_CHAT\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_SELECT_CHAMPION\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_SELECT_SKIN\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_LOCK_CHAMPION\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_BAN_SELECT_CHAMPION\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_BAN_LOCK_CHAMPION\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_SELECT_SPELL_1\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_SELECT_SPELL_2\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_TRADE_REQUEST\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_TRADE_ACCEPT\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      case \"CHAMPSELECT_TRADE_DENY\":\n        if (flyback) {\n          callback = flyback;\n          payload = params;\n        } else {\n          callback = () => {\n            console.log(\"Recieved response\");\n          };\n        }\n        break;\n      default:\n        throw new Error(`Could not send unhandled message type: ${type}`);\n    }\n    const messageCallbackId = this.generateMessageCallback(callback, {\n      ...params,\n      messageType: type\n    });\n    message = {\n      ...payload,\n      id: messageCallbackId,\n      messageType: type\n    };\n    this.stomp.publish({\n      destination: \"/out/champselect\",\n      body: JSON.stringify(message)\n    });\n    console.groupEnd();\n  }\n\n  /* HANDLERS */\n  handleSystemMessage(data, original) {\n    if (original.denyHandler == true) {\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\n      console.groupEnd();\n      return;\n    }\n    // gets the response as 1st param\n    // gets the original message as 2nd param\n    console.group(\"[HANDLER][SYSTEM]\", data.messageType);\n    switch (data.messageType) {\n      case \"FRIEND_OUT\":\n        axios.get(`${this.api.host}:${this.api.port}/users/${original.data}`, this.auth_headers).then(response => {\n          console.log(response.data);\n          if (this.state.friendList.filter(friend => {\n            return friend.summonerName == response.data.summonerName;\n          }).length == 0) {\n            this.dispatch(\"socketExtraHandler\", {\n              commit: \"socketAddFriendOut\",\n              data: response.data\n            });\n          }\n        }).catch(err => {\n          throw err;\n        });\n        break;\n      case \"FRIEND_IN_ACCEPT\":\n        console.log(original.data);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketAddFriend\",\n          data: original.data\n        });\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriendIn\",\n          data: original.data\n        });\n        break;\n      case \"FRIEND_IN_DENY\":\n        console.log(original.data);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriendIn\",\n          data: original.data\n        });\n        break;\n      case \"FRIEND_REMOVE\":\n        console.log(original.data);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriend\",\n          data: original.data\n        });\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriendOut\",\n          data: original.data\n        });\n        break;\n      case \"FRIEND_BLOCK\":\n        console.log(original.data);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketDelFriend\",\n          data: original.data\n        });\n        break;\n      case \"MESSAGE_PRIVATE_GET\":\n        data.data.forEach(message => {\n          message.read = true;\n        });\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketSetChatMessagesForRecipient\",\n          data: {\n            messages: data,\n            recipient: original.data\n          }\n        });\n        break;\n      case \"MESSAGE_PRIVATE\":\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketAddChatMessageToRecipient\",\n          data: {\n            data: original.message,\n            from: original.from,\n            to: original.data.summonerName,\n            messageTimestamp: data.messageTimestamp,\n            read: true\n          }\n        });\n        break;\n      case \"LOBBY_CREATE\":\n        this.connectToLobby(data.data.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketSetUserLobby\",\n          data: data.data\n        });\n        break;\n      case \"LOBBY_ACCEPT\":\n        this.connectToLobby(data.data.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketSetUserLobby\",\n          data: data.data\n        });\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketRemoveInvite\",\n          data: original.data\n        });\n        break;\n      case \"LOBBY_DENY\":\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketRemoveInvite\",\n          data: original.data\n        });\n        break;\n      default:\n        console.log(\"No extra system handlers were included\");\n        break;\n    }\n    console.groupEnd();\n  }\n  handleLobbyMessage(data, original) {\n    if (original.denyHandler == true) {\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\n      console.groupEnd();\n      return;\n    }\n    // gets the response as 1st param\n    // gets the original message as 2nd param\n    console.group(\"[HANDLER][LOBBY]\", data.messageType);\n    switch (data.messageType) {\n      case \"LOBBY_LEAVE\":\n        this.disconnectFromLobby(this.state.lobby.uuid);\n        this.dispatch(\"socketExtraHandler\", {\n          commit: \"socketClearLobbyData\",\n          data: null\n        });\n        break;\n      case \"LOBBY_ACCEPT\":\n        if (this.state.lobby.uuid) {\n          this.disconnectFromLobby(this.state.lobby.uuid);\n        }\n        break;\n      default:\n        console.log(\"No extra lobby handlers were included\");\n        console.log(data);\n        break;\n    }\n    console.groupEnd();\n  }\n  handleChampSelectMessage(data, original) {\n    if (original.denyHandler == true) {\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\n      console.groupEnd();\n      return;\n    }\n    // gets the response as 1st param\n    // gets the original message as 2nd param\n    console.group(\"[HANDLER][CHAMPSELECT]\", data.messageType);\n    switch (data.messageType) {\n      default:\n        console.log(\"No extra lobby handlers were included\");\n        console.log(data);\n        break;\n    }\n    console.groupEnd();\n  }\n}","map":{"version":3,"names":["path","require","Client","Vue","uuid","axios","router","ipcRenderer","EventEmitter","constructor","_events","on","name","listener","push","removeListener","listenerToRemove","Error","filterListeners","filter","emit","data","fireCallbacks","callback","forEach","SocketManager","userObj","state","dispatch","vm","config","api","wasConnected","reconnectCount","stomp","brokerURL","host","replace","port","token","onConnect","connectedFrame","emitter","log","connectToSystem","afterConnect","currentRoute","$modal","reconnect","hide","reconnectDelay","onWebSocketClose","closed","code","connectionLoss","send","user","connected","auth_headers","headers","Authorization","callbacks","isFirstMessage","lobbysub","systemsub","champselectsub","prototype","$socket","initEvents","activate","commit","show","subscribe","message","parseMessage","messageType","recievedSystemMessage","connectToLobby","lobbyId","recievedLobbyMessage","connectToChampSelect","champselectId","recievedChampSelectMessage","disconnectFromSystem","unsubscribe","deactivate","disconnectFromLobby","disconnectFromChampSelect","JSON","parse","body","generateMessageCallback","id","originalMessage","prefix","sender","stack","split","trim","console","group","groupEnd","recievedError","error","startGame","spawn","executablePath","client","ip","blowfish","playerId","cwd","dirname","subscriptions","pendingMessage","messageTimestamp","handleSystemMessage","privateChat","chatMessages","from","sendSystemMessage","summonerName","denyHandler","response","index","length","read","messages","recipient","sound","$sound","template","handleLobbyMessage","lobby","inQueue","isCustom","matchmaking","handleChampSelectMessage","champselect","type","params","flyback","Object","payload","friendIn","friend","userFix","to","messageCallbackId","publish","destination","stringify","sendLobbyMessage","summ","sendChampSelectMessage","original","get","then","friendList","catch","err"],"sources":["D:/game/lol/ls4/ls4-launcher/src/store/utils/socketManager.js"],"sourcesContent":["var path = require(\"path\");\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport Vue from \"vue\";\r\nimport { uuid } from \"uuidv4\";\r\nimport axios from \"axios\";\r\nimport router from \"../../Router\";\r\nimport { ipcRenderer } from \"electron\";\r\n\r\nclass EventEmitter {\r\n  constructor() {\r\n    this._events = {};\r\n  }\r\n\r\n  on(name, listener) {\r\n    if (!this._events[name]) {\r\n      this._events[name] = [];\r\n    }\r\n\r\n    this._events[name].push(listener);\r\n  }\r\n\r\n  removeListener(name, listenerToRemove) {\r\n    if (!this._events[name]) {\r\n      throw new Error(\r\n        `Can't remove a listener. Event \"${name}\" doesn't exits.`\r\n      );\r\n    }\r\n\r\n    const filterListeners = listener => listener !== listenerToRemove;\r\n\r\n    this._events[name] = this._events[name].filter(filterListeners);\r\n  }\r\n\r\n  emit(name, data) {\r\n    if (!this._events[name]) {\r\n      throw new Error(`Can't emit an event. Event \"${name}\" doesn't exits.`);\r\n    }\r\n\r\n    const fireCallbacks = callback => {\r\n      callback(data);\r\n    };\r\n\r\n    this._events[name].forEach(fireCallbacks);\r\n  }\r\n}\r\n\r\nexport default class SocketManager {\r\n  constructor(userObj, state, dispatch, vm) {\r\n    const config = state.config.api;\r\n    this.api = config;\r\n    this.vm = vm;\r\n    this.state = state;\r\n    this.wasConnected = false;\r\n    this.reconnectCount = 0;\r\n\r\n    this.stomp = new Client({\r\n      brokerURL: `ws://${config.host.replace(/^https?:\\/\\//, \"\")}:${\r\n        config.port\r\n      }/socket?token=${state.token}`,\r\n      onConnect: connectedFrame => {\r\n        this.emitter.emit(\"connected\", true);\r\n        this.log(connectedFrame);\r\n        this.connectToSystem(); // Subscribe to System Destination\r\n        this.afterConnect();\r\n        this.wasConnected = true;\r\n\r\n        if (this.reconnectCount >= 1) {\r\n          // This means we connect after reconnect, refresh to home page\r\n          if (router.currentRoute.name != \"Home\") {\r\n            router.push(\"/LoggedIn/home\");\r\n          }\r\n          this.vm.$modal.reconnect.hide();\r\n\r\n          this.reconnectCount = 0;\r\n        }\r\n      },\r\n      reconnectDelay: 5000,\r\n      onWebSocketClose: closed => {\r\n        if (this.wasConnected) {\r\n          // Reset wasConnected\r\n          this.wasConnected = false;\r\n\r\n          if (closed.code != 1000) {\r\n            // Connection loss happened\r\n            this.reconnectCount++;\r\n            this.connectionLoss();\r\n          }\r\n        } else {\r\n          // Connection loss happened on reconnect, increase counter and closeApp on 1 minute\r\n          this.reconnectCount++;\r\n\r\n          if (this.reconnectCount >= 13) {\r\n            ipcRenderer.send(\"closeApp\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.user = userObj;\r\n    this.connected = false;\r\n    this.dispatch = dispatch;\r\n    this.auth_headers = { headers: { Authorization: `Bearer ${state.token}` } };\r\n    this.emitter = new EventEmitter();\r\n    this.callbacks = [];\r\n    this.isFirstMessage = true;\r\n    this.lobbysub = null;\r\n    this.systemsub = null;\r\n    this.champselectsub = null;\r\n\r\n    Vue.prototype.$socket = this;\r\n\r\n    this.initEvents();\r\n\r\n    this.stomp.activate();\r\n  }\r\n\r\n  connectionLoss() {\r\n    // We can keep all data except lobby and chats\r\n\r\n    if (router.currentRoute.name != \"Home\") {\r\n      router.push(\"/LoggedIn/home\");\r\n    }\r\n    this.dispatch(\"socketExtraHandler\", {\r\n      commit: \"clearLobby\"\r\n    });\r\n    this.dispatch(\"socketExtraHandler\", {\r\n      commit: \"clearChats\"\r\n    });\r\n    this.dispatch(\"socketExtraHandler\", {\r\n      commit: \"clearLobbyTimers\"\r\n    });\r\n\r\n    this.vm.$modal.reconnect.show();\r\n  }\r\n\r\n  /* INITIALIZATIONS */\r\n  initEvents() {\r\n    this.emitter.on(\"connected\", () => {\r\n      this.connected = true;\r\n      this.afterConnect();\r\n    });\r\n  }\r\n\r\n  /* SUBSCRIPTIONS */\r\n  connectToSystem() {\r\n    this.log(\"Subscribed to /user/queue/system\");\r\n    this.systemsub = this.stomp.subscribe(\"/user/queue/system\", message => {\r\n      if (\r\n        this.isFirstMessage &&\r\n        this.parseMessage(message).messageType !=\r\n          \"USER_LOGGED_IN_ANOTHER_LOCATION\"\r\n      ) {\r\n        this.isFirstMessage = false;\r\n      }\r\n      this.recievedSystemMessage(message);\r\n    });\r\n  }\r\n\r\n  connectToLobby(lobbyId) {\r\n    this.log(`Subscribed to /user/queue/lobby${lobbyId}`);\r\n    this.lobbysub = this.stomp.subscribe(\r\n      `/user/queue/lobby${lobbyId}`,\r\n      message => {\r\n        this.recievedLobbyMessage(message);\r\n      }\r\n    );\r\n  }\r\n\r\n  connectToChampSelect(champselectId) {\r\n    this.log(`Subscribed to /user/queue/champselect${champselectId}`);\r\n    this.champselectsub = this.stomp.subscribe(\r\n      `/user/queue/champselect${champselectId}`,\r\n      message => {\r\n        this.recievedChampSelectMessage(message);\r\n      }\r\n    );\r\n  }\r\n\r\n  disconnectFromSystem() {\r\n    this.log(`Unsubscribed from /user/queue/system`);\r\n    this.systemsub.unsubscribe();\r\n    this.stomp.deactivate();\r\n  }\r\n\r\n  disconnectFromLobby(lobbyId) {\r\n    this.log(`Unsubscribed from /user/queue/lobby${lobbyId}`);\r\n    this.lobbysub.unsubscribe();\r\n  }\r\n\r\n  disconnectFromChampSelect(champselectId) {\r\n    this.log(`Unsubscribed from /user/queue/champselect${champselectId}`);\r\n    this.champselectsub.unsubscribe();\r\n  }\r\n\r\n  /* EVENTS */\r\n  afterConnect() {\r\n    // HANDLE STUFF IF NEED BE AFTER CONNECTION\r\n  }\r\n\r\n  /* UTILITIES */\r\n  parseMessage(message) {\r\n    return JSON.parse(message.body);\r\n  }\r\n  generateMessageCallback(callback, message) {\r\n    const id = uuid();\r\n    this.callbacks[id] = { callback: callback, originalMessage: message };\r\n    return id;\r\n  }\r\n  log(message, prefix = null) {\r\n    const sender = new Error().stack\r\n      .split(\"\\n\")[2]\r\n      .replace(\" at \", \"\")\r\n      .trim();\r\n    if (prefix) {\r\n      console.group([`${prefix}`, `[${sender}]`]);\r\n    } else {\r\n      console.group(`[${sender}]`);\r\n    }\r\n    console.log(message);\r\n    console.groupEnd();\r\n  }\r\n  recievedError(error) {\r\n    this.log(error, \"[STOMP][ERROR]\");\r\n  }\r\n\r\n  startGame(data) {\r\n    const { spawn } = require(\"child_process\");\r\n    let executablePath = this.state.config.path.client;\r\n    // let parameters = [\r\n    //   '\"\" \"\" \"\" \"' +\r\n    //     data.ip +\r\n    //     \" \" +\r\n    //     data.port +\r\n    //     \" \" +\r\n    //     data.blowfish +\r\n    //     \" \" +\r\n    //     data.playerId\r\n    // ];\r\n\r\n    // const sub = spawn(executablePath, parameters, {\r\n    //   detached: true,\r\n    //   stdio: \"ignore\"\r\n    // });\r\n\r\n    // sub.unref();\r\n\r\n    spawn(\r\n      \"cmd\",\r\n      [\r\n        \"/c\",\r\n        \"start\",\r\n        \"\",\r\n        executablePath,\r\n        \"8394\",\r\n        \"LoLLauncher.exe\",\r\n        \"\",\r\n        data.ip + \" \" + data.port + \" \" + data.blowfish + \" \" + data.playerId\r\n      ],\r\n      {\r\n        cwd: path.dirname(executablePath)\r\n      }\r\n    );\r\n  }\r\n\r\n  /* MESSAGES */\r\n  recievedSystemMessage(message) {\r\n    const data = this.parseMessage(message);\r\n    console.group(\"[RECIEVER][SYSTEM]\", data.messageType);\r\n    console.log(this.stomp.subscriptions);\r\n\r\n    if (data.id !== null) {\r\n      const pendingMessage = this.callbacks[data.id];\r\n      pendingMessage.callback(data.data, data.error, data.messageTimestamp);\r\n      // TODO: This is a temporary fix to deny lobbies which don't exist anymore. We need to do proper error handling here though. See https://git.jandev.de/leagues4/ls4-launcher/-/issues/91\r\n      if (!data.error || data.messageType === \"LOBBY_DENY\") {\r\n        console.groupEnd();\r\n        this.handleSystemMessage(data, pendingMessage.originalMessage);\r\n      }\r\n      delete this.callbacks[data.id];\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n\r\n    switch (data.messageType) {\r\n      case \"FRIEND_LIST\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendList\", data.data);\r\n        break;\r\n\r\n      case \"FRIEND_OUT\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendOut\", data.data);\r\n        break;\r\n\r\n      case \"FRIEND_IN\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendIn\", data.data);\r\n        break;\r\n\r\n      case \"FRIEND_REMOVE\":\r\n        console.log(data);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriend\",\r\n          data: data.data\r\n        });\r\n        break;\r\n\r\n      case \"FRIEND_IN_ACCEPT\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendInAccept\", data.data);\r\n        break;\r\n\r\n      case \"FRIEND_IN_DENY\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendInDeny\", data.data);\r\n        break;\r\n\r\n      case \"USER_UPDATE_SUMMONER_NAME\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedSummonerNameUpdate\", data.data);\r\n        break;\r\n\r\n      case \"MESSAGE_PRIVATE\":\r\n        if (!this.state.privateChat.chatMessages[data.data.from]) {\r\n          this.sendSystemMessage(\r\n            \"MESSAGE_PRIVATE_GET\",\r\n            { data: { summonerName: data.data.from }, denyHandler: true },\r\n            (response, error) => {\r\n              if (error) {\r\n                console.log(\"Flyback error:\");\r\n                console.log(error);\r\n              }\r\n\r\n              response.forEach((message, index) => {\r\n                if (index != response.length - 1) {\r\n                  message.read = true;\r\n                } else {\r\n                  message.read = false;\r\n                }\r\n              });\r\n\r\n              console.log(response);\r\n\r\n              this.dispatch(\"socketExtraHandler\", {\r\n                commit: \"socketSetChatMessagesForRecipient\",\r\n                data: {\r\n                  messages: { data: response },\r\n                  recipient: { summonerName: data.data.from },\r\n                  sound: true\r\n                }\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.dispatch(\"socketRecievedPrivateMessage\", data.data);\r\n        }\r\n        break;\r\n\r\n      case \"FRIEND_UPDATE\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedFriendUpdate\", data.data);\r\n        break;\r\n\r\n      case \"LOBBY_INVITE\":\r\n        console.log(data);\r\n        this.dispatch(\"socketRecievedLobbyInvite\", data.data);\r\n\r\n        this.vm.$sound.template(\"OVERVIEW_INVITE\");\r\n        break;\r\n\r\n      case \"LOBBY_INVITE_REVOKE\":\r\n        console.log(data.data);\r\n        this.dispatch(\"socketReceivedLobbyInviteRevoke\", data.data);\r\n        break;\r\n\r\n      case \"USER_LOGGED_IN_ANOTHER_LOCATION\":\r\n        if (!this.isFirstMessage) {\r\n          ipcRenderer.send(\"closeApp\");\r\n        }\r\n        break;\r\n\r\n      case \"USER_BAN\":\r\n        ipcRenderer.send(\"closeApp\");\r\n        break;\r\n\r\n      case \"KILL\":\r\n        ipcRenderer.send(\"closeApp\");\r\n        break;\r\n\r\n      default:\r\n        console.log(data);\r\n        throw new Error(\r\n          `Could not handle unhandled message type: ${data.messageType}`\r\n        );\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  recievedLobbyMessage(message) {\r\n    const data = this.parseMessage(message);\r\n    console.group(\"[RECIEVER][LOBBY]\", data.messageType);\r\n\r\n    if (data.id !== null) {\r\n      const pendingMessage = this.callbacks[data.id];\r\n      pendingMessage.callback(data.data, data.error);\r\n      if (!data.error) {\r\n        console.groupEnd();\r\n        this.handleLobbyMessage(data, pendingMessage.originalMessage);\r\n      }\r\n      delete this.callbacks[data.id];\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n\r\n    switch (data.messageType) {\r\n      case \"LOBBY_CHAT\":\r\n        this.dispatch(\"socketRecievedLobbyChat\", data.data);\r\n        break;\r\n\r\n      case \"LOBBY_UPDATE\":\r\n        console.log(data.data);\r\n        if (\r\n          this.state.lobby &&\r\n          this.state.lobby.inQueue == false &&\r\n          data.data.inQueue == true\r\n        ) {\r\n          this.dispatch(\"setLobbyTimers\");\r\n        } else if (\r\n          this.state.lobby &&\r\n          this.state.lobby.inQueue == true &&\r\n          data.data.inQueue == false\r\n        ) {\r\n          this.dispatch(\"clearLobbyTimers\");\r\n        }\r\n\r\n        if (!this.state.lobby.isCustom && data.data.isCustom) {\r\n          router.push(\"/lobbyCustom\");\r\n        } else if (this.state.lobby.isCustom && !data.data.isCustom) {\r\n          router.push(\"/lobby\");\r\n        }\r\n\r\n        this.dispatch(\"socketRecievedLobbyUpdate\", data.data);\r\n\r\n        break;\r\n\r\n      case \"LOBBY_KICK\":\r\n        router.push(\"/LoggedIn/home\");\r\n        this.disconnectFromLobby(this.state.lobby.uuid);\r\n        this.dispatch(\"socketKickedFromLobby\");\r\n        break;\r\n\r\n      case \"LOBBY_MATCH_FOUND\":\r\n        console.log(data.data);\r\n        this.vm.$modal.matchmaking.show();\r\n        break;\r\n\r\n      case \"LOBBY_MATCH_FOUND_UPDATE\":\r\n        console.log(data.data);\r\n        // let dummyData = {\r\n        //   \"accepted\": 4,\r\n        //   \"pending\": 4,\r\n        //   \"denied\": 2\r\n        // }\r\n        this.dispatch(\"socketRecievedMatchFoundUpdate\", data.data);\r\n        break;\r\n\r\n      case \"LOBBY_CHAMPSELECT_SUBSCRIBE\":\r\n        console.log(data.data);\r\n        this.connectToChampSelect(data.data.uuid);\r\n        this.dispatch(\"socketSetUserChampSelect\", data.data);\r\n        router.push(\"/champselect\");\r\n        break;\r\n\r\n      default:\r\n        console.log(data);\r\n        throw new Error(\r\n          `Could not handle unhandled message type: ${data.messageType}`\r\n        );\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  recievedChampSelectMessage(message) {\r\n    const data = this.parseMessage(message);\r\n    console.group(\"[RECIEVER][CHAMPSELECT]\", data.messageType);\r\n\r\n    if (data.id !== null) {\r\n      const pendingMessage = this.callbacks[data.id];\r\n      pendingMessage.callback(data.data, data.error);\r\n      if (!data.error) {\r\n        console.groupEnd();\r\n        this.handleChampSelectMessage(data, pendingMessage.originalMessage);\r\n      }\r\n      delete this.callbacks[data.id];\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n\r\n    switch (data.messageType) {\r\n      case \"CHAMPSELECT_CHAT\":\r\n        this.dispatch(\"socketRecievedChampSelectChat\", data.data);\r\n        break;\r\n\r\n      case \"CHAMPSELECT_UPDATE\":\r\n        console.log(data.data);\r\n        this.dispatch(\"socketSetUserChampSelect\", data.data);\r\n        break;\r\n\r\n      case \"CHAMPSELECT_ABANDON\":\r\n        this.disconnectFromChampSelect(this.state.champselect.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketClearChampSelectData\",\r\n          data: null\r\n        });\r\n        if (this.state.lobby && this.state.lobby.isCustom) {\r\n          router.push(\"/lobbyCustom\");\r\n        } else {\r\n          router.push(\"/Lobby\");\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_GAME_START\":\r\n        this.disconnectFromChampSelect(this.state.champselect.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketClearChampSelectData\",\r\n          data: null\r\n        });\r\n        this.disconnectFromLobby(this.state.lobby.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketClearLobbyData\",\r\n          data: null\r\n        });\r\n        router.push(\"/LoggedIn/home\");\r\n\r\n        if (data.data && data.data.ip) {\r\n          this.startGame(data.data);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        console.log(data);\r\n        throw new Error(\r\n          `Could not handle unhandled message type: ${data.messageType}`\r\n        );\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  /* SENDERS */\r\n  sendSystemMessage(type, params, flyback = null) {\r\n    console.group(\"[SENDER][SYSTEM]\", type);\r\n    let message = new Object();\r\n    let callback;\r\n    let payload;\r\n    switch (type) {\r\n      case \"FRIEND_OUT\":\r\n        if (\r\n          this.state.friendIn.filter(friend => {\r\n            return friend.summonerName == params.data;\r\n          }).length > 0\r\n        ) {\r\n          const userFix = this.state.friendIn.filter(friend => {\r\n            return friend.summonerName == params.data;\r\n          })[0];\r\n\r\n          this.dispatch(\"socketExtraHandler\", {\r\n            commit: \"socketAddFriend\",\r\n            data: userFix\r\n          });\r\n          this.dispatch(\"socketExtraHandler\", {\r\n            commit: \"socketDelFriendIn\",\r\n            data: userFix\r\n          });\r\n          if (flyback) {\r\n            callback = flyback;\r\n            payload = params;\r\n          } else {\r\n            callback = () => {\r\n              console.log(\"Recieved response\");\r\n            };\r\n          }\r\n        } else {\r\n          if (flyback) {\r\n            callback = flyback;\r\n            payload = params;\r\n          } else {\r\n            callback = () => {\r\n              console.log(\"Recieved response\");\r\n            };\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"FRIEND_IN_ACCEPT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = { data: params.data.summonerName };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n\r\n        break;\r\n\r\n      case \"FRIEND_IN_DENY\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = { data: params.data.summonerName };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"FRIEND_REMOVE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = { data: params.data.summonerName };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"FRIEND_BLOCK\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = { data: params.data.summonerName };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"MESSAGE_PRIVATE_GET\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = { data: params.data.summonerName };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"MESSAGE_PRIVATE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = {\r\n            data: { to: params.data.summonerName, data: params.message }\r\n          };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"USER_UPDATE_ICON\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"USER_UPDATE_MOTTO\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"USER_UPDATE_STATUS\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"USER_BAN\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_CREATE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_ACCEPT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_DENY\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Could not send unhandled message type: ${type}`);\r\n    }\r\n\r\n    const messageCallbackId = this.generateMessageCallback(callback, {\r\n      ...params,\r\n      messageType: type\r\n    });\r\n    message = { ...payload, id: messageCallbackId, messageType: type };\r\n    this.stomp.publish({\r\n      destination: \"/out/system\",\r\n      body: JSON.stringify(message)\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  sendLobbyMessage(type, params, flyback = null) {\r\n    console.group(\"[SENDER][LOBBY]\", type);\r\n    let message = new Object();\r\n    let callback;\r\n    let payload;\r\n    switch (type) {\r\n      case \"LOBBY_CHAT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_INVITE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          let summ = params.data.summonerName;\r\n          payload = { data: summ };\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_KICK\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_CHANGE_TYPE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_LEAVE\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_MATCHMAKING_START\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_MATCHMAKING_STOP\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_SWITCH_TEAM\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_CHAMPSELECT_ACCEPT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"LOBBY_CHAMPSELECT_DENY\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Could not send unhandled message type: ${type}`);\r\n    }\r\n\r\n    const messageCallbackId = this.generateMessageCallback(callback, {\r\n      ...params,\r\n      messageType: type\r\n    });\r\n    message = { ...payload, id: messageCallbackId, messageType: type };\r\n    this.stomp.publish({\r\n      destination: \"/out/lobby\",\r\n      body: JSON.stringify(message)\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  sendChampSelectMessage(type, params, flyback = null) {\r\n    console.group(\"[SENDER][CHAMPSELECT]\", type);\r\n    let message = new Object();\r\n    let callback;\r\n    let payload;\r\n    switch (type) {\r\n      case \"CHAMPSELECT_CHAT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_SELECT_CHAMPION\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_SELECT_SKIN\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_LOCK_CHAMPION\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_BAN_SELECT_CHAMPION\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_BAN_LOCK_CHAMPION\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_SELECT_SPELL_1\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_SELECT_SPELL_2\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_TRADE_REQUEST\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_TRADE_ACCEPT\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      case \"CHAMPSELECT_TRADE_DENY\":\r\n        if (flyback) {\r\n          callback = flyback;\r\n          payload = params;\r\n        } else {\r\n          callback = () => {\r\n            console.log(\"Recieved response\");\r\n          };\r\n        }\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Could not send unhandled message type: ${type}`);\r\n    }\r\n\r\n    const messageCallbackId = this.generateMessageCallback(callback, {\r\n      ...params,\r\n      messageType: type\r\n    });\r\n    message = { ...payload, id: messageCallbackId, messageType: type };\r\n    this.stomp.publish({\r\n      destination: \"/out/champselect\",\r\n      body: JSON.stringify(message)\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  /* HANDLERS */\r\n  handleSystemMessage(data, original) {\r\n    if (original.denyHandler == true) {\r\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n    // gets the response as 1st param\r\n    // gets the original message as 2nd param\r\n    console.group(\"[HANDLER][SYSTEM]\", data.messageType);\r\n    switch (data.messageType) {\r\n      case \"FRIEND_OUT\":\r\n        axios\r\n          .get(\r\n            `${this.api.host}:${this.api.port}/users/${original.data}`,\r\n            this.auth_headers\r\n          )\r\n          .then(response => {\r\n            console.log(response.data);\r\n            if (\r\n              this.state.friendList.filter(friend => {\r\n                return friend.summonerName == response.data.summonerName;\r\n              }).length == 0\r\n            ) {\r\n              this.dispatch(\"socketExtraHandler\", {\r\n                commit: \"socketAddFriendOut\",\r\n                data: response.data\r\n              });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            throw err;\r\n          });\r\n        break;\r\n\r\n      case \"FRIEND_IN_ACCEPT\":\r\n        console.log(original.data);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketAddFriend\",\r\n          data: original.data\r\n        });\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriendIn\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      case \"FRIEND_IN_DENY\":\r\n        console.log(original.data);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriendIn\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      case \"FRIEND_REMOVE\":\r\n        console.log(original.data);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriend\",\r\n          data: original.data\r\n        });\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriendOut\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      case \"FRIEND_BLOCK\":\r\n        console.log(original.data);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketDelFriend\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      case \"MESSAGE_PRIVATE_GET\":\r\n        data.data.forEach(message => {\r\n          message.read = true;\r\n        });\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketSetChatMessagesForRecipient\",\r\n          data: { messages: data, recipient: original.data }\r\n        });\r\n        break;\r\n\r\n      case \"MESSAGE_PRIVATE\":\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketAddChatMessageToRecipient\",\r\n          data: {\r\n            data: original.message,\r\n            from: original.from,\r\n            to: original.data.summonerName,\r\n            messageTimestamp: data.messageTimestamp,\r\n            read: true\r\n          }\r\n        });\r\n        break;\r\n\r\n      case \"LOBBY_CREATE\":\r\n        this.connectToLobby(data.data.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketSetUserLobby\",\r\n          data: data.data\r\n        });\r\n        break;\r\n\r\n      case \"LOBBY_ACCEPT\":\r\n        this.connectToLobby(data.data.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketSetUserLobby\",\r\n          data: data.data\r\n        });\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketRemoveInvite\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      case \"LOBBY_DENY\":\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketRemoveInvite\",\r\n          data: original.data\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log(\"No extra system handlers were included\");\r\n        break;\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  handleLobbyMessage(data, original) {\r\n    if (original.denyHandler == true) {\r\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n    // gets the response as 1st param\r\n    // gets the original message as 2nd param\r\n    console.group(\"[HANDLER][LOBBY]\", data.messageType);\r\n    switch (data.messageType) {\r\n      case \"LOBBY_LEAVE\":\r\n        this.disconnectFromLobby(this.state.lobby.uuid);\r\n        this.dispatch(\"socketExtraHandler\", {\r\n          commit: \"socketClearLobbyData\",\r\n          data: null\r\n        });\r\n        break;\r\n\r\n      case \"LOBBY_ACCEPT\":\r\n        if (this.state.lobby.uuid) {\r\n          this.disconnectFromLobby(this.state.lobby.uuid);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        console.log(\"No extra lobby handlers were included\");\r\n        console.log(data);\r\n        break;\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  handleChampSelectMessage(data, original) {\r\n    if (original.denyHandler == true) {\r\n      this.log(\"HANDLER IMPLICITLY RETURNED\");\r\n      console.groupEnd();\r\n      return;\r\n    }\r\n    // gets the response as 1st param\r\n    // gets the original message as 2nd param\r\n    console.group(\"[HANDLER][CHAMPSELECT]\", data.messageType);\r\n    switch (data.messageType) {\r\n      default:\r\n        console.log(\"No extra lobby handlers were included\");\r\n        console.log(data);\r\n        break;\r\n    }\r\n    console.groupEnd();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}