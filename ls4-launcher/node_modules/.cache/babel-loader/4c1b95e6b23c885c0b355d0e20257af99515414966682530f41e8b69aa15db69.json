{"ast":null,"code":"import ChatBlock from \"@/components/Chat/ChatBlock.vue\";\nimport Chat from \"../../plugins/chat\";\n// import NotImplementedError from \"../../utils/errors/NotImplementedError\";\n// import router from \"@/Router\";\nimport { mapState } from \"vuex\";\nexport default {\n  components: {\n    ChatBlock\n  },\n  data() {\n    return {\n      visible: false,\n      routeIsNotChampselect: true\n    };\n  },\n  watch: {\n    $route: function () {\n      if (this.$route.path === \"/champselect\") {\n        this.routeIsNotChampselect = false;\n      } else {\n        this.routeIsNotChampselect = true;\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      shouldBlinkNotifications(state) {\n        if (state.sidebarComponent != \"notifications\") {\n          if (state.lobbyInvites.length > 0 || state.friendIn.length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      },\n      recipients: state => state.privateChat.openChats\n      // recipients: (state) => {\n      //   const { host, port } = state.config.download;\n      //   state.friendList.forEach((recipient) => {\n      //     recipient.summonerIconUrl = `${host}:${port}/summoner_icons/${recipient.summonerIconId}.png`;\n      //   });\n      //   return state.friendList;\n      // },\n    })\n  },\n  methods: {\n    toggleSidebar(component) {\n      this.$sound.template(\"OVERVIEW_CLICK\");\n      this.$store.commit(\"setSidebarComponent\", component);\n    },\n    closeChatWindow(recipient) {\n      console.log(\"Should close for \" + recipient.summonerName);\n    }\n    // reportBug() {\n    //   router.push(\"/bugreport\");\n    // },\n  },\n  beforeMount() {\n    Chat.EventBus.$on(\"show\", params => {\n      // Handled via state, but kept for \"reasons\"\n      console.log(params);\n    });\n  }\n};","map":{"version":3,"names":["ChatBlock","Chat","mapState","components","data","visible","routeIsNotChampselect","watch","$route","path","computed","shouldBlinkNotifications","state","sidebarComponent","lobbyInvites","length","friendIn","recipients","privateChat","openChats","methods","toggleSidebar","component","$sound","template","$store","commit","closeChatWindow","recipient","console","log","summonerName","beforeMount","EventBus","$on","params"],"sources":["src/components/Chat/PrivateChat.vue"],"sourcesContent":["<template>\r\n  <div id=\"privatechat\" v-if=\"this.$store.state.token != ''\">\r\n    <div class=\"chatrow\">\r\n      <ChatBlock\r\n        v-for=\"(recipient, index) in recipients\"\r\n        :key=\"index\"\r\n        :recipient=\"recipient\"\r\n      />\r\n    </div>\r\n    <div class=\"actions\">\r\n      <button @click=\"toggleSidebar('friends')\" class=\"friendsBtn\"></button>\r\n      <button\r\n        @click=\"toggleSidebar('chatrooms')\"\r\n        disabled\r\n        class=\"chatroomsBtn\"\r\n      ></button>\r\n      <button\r\n        :class=\"{ blinking: shouldBlinkNotifications }\"\r\n        @click=\"toggleSidebar('notifications')\"\r\n        class=\"notificationsBtn\"\r\n      ></button>\r\n      <button @click=\"$router.push('/bugreport')\" class=\"bugreportBtn\">\r\n        <i class=\"fas fa-bug\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatBlock from \"@/components/Chat/ChatBlock.vue\";\r\nimport Chat from \"../../plugins/chat\";\r\n// import NotImplementedError from \"../../utils/errors/NotImplementedError\";\r\n// import router from \"@/Router\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    ChatBlock\r\n  },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      routeIsNotChampselect: true\r\n    };\r\n  },\r\n  watch: {\r\n    $route: function() {\r\n      if (this.$route.path === \"/champselect\") {\r\n        this.routeIsNotChampselect = false;\r\n      } else {\r\n        this.routeIsNotChampselect = true;\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      shouldBlinkNotifications(state) {\r\n        if (state.sidebarComponent != \"notifications\") {\r\n          if (state.lobbyInvites.length > 0 || state.friendIn.length > 0) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      recipients: state => state.privateChat.openChats\r\n      // recipients: (state) => {\r\n      //   const { host, port } = state.config.download;\r\n      //   state.friendList.forEach((recipient) => {\r\n      //     recipient.summonerIconUrl = `${host}:${port}/summoner_icons/${recipient.summonerIconId}.png`;\r\n      //   });\r\n      //   return state.friendList;\r\n      // },\r\n    })\r\n  },\r\n  methods: {\r\n    toggleSidebar(component) {\r\n      this.$sound.template(\"OVERVIEW_CLICK\");\r\n      this.$store.commit(\"setSidebarComponent\", component);\r\n    },\r\n    closeChatWindow(recipient) {\r\n      console.log(\"Should close for \" + recipient.summonerName);\r\n    }\r\n    // reportBug() {\r\n    //   router.push(\"/bugreport\");\r\n    // },\r\n  },\r\n  beforeMount() {\r\n    Chat.EventBus.$on(\"show\", params => {\r\n      // Handled via state, but kept for \"reasons\"\r\n      console.log(params);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n#privatechat {\r\n  position: absolute;\r\n  height: 40px;\r\n  width: 100%;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 5;\r\n  display: flex;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  width: 21%;\r\n  height: 100%;\r\n  padding: 5px 0;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.actions button {\r\n  width: 24%;\r\n  height: 100%;\r\n  border-radius: 3px;\r\n  background-size: 100% 100%;\r\n  background-color: transparent;\r\n  outline: none;\r\n  border: none;\r\n  transition: filter ease-in-out 200ms;\r\n}\r\n\r\n.actions button.friendsBtn {\r\n  background-image: url(\"../../assets/images/sidebar-friends.png\");\r\n}\r\n\r\n.actions button.chatroomsBtn {\r\n  background-image: url(\"../../assets/images/sidebar-chatrooms.png\");\r\n}\r\n\r\n.actions button.notificationsBtn {\r\n  background-image: url(\"../../assets/images/sidebar-notifications.png\");\r\n}\r\n.actions button.bugreportBtn {\r\n  width: 10%;\r\n  background: linear-gradient(\r\n    180deg,\r\n    #3c73b4 0%,\r\n    #20477e 45%,\r\n    #1e3e6d 50%,\r\n    #0e284b 100%\r\n  );\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  border: 1px solid #304b69;\r\n  color: white;\r\n  font-family: LoLFont2;\r\n  transition: filter ease-in-out 200ms;\r\n  cursor: pointer;\r\n}\r\n\r\n.actions button.bugreportBtn:hover {\r\n  filter: brightness(1.2);\r\n}\r\n\r\n.actions button:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n.actions button:disabled {\r\n  opacity: 0.5;\r\n}\r\n.actions button:not(:disabled):not(.bugreportBtn):hover {\r\n  filter: brightness(1.5);\r\n}\r\n\r\n.chatrow {\r\n  display: flex;\r\n  width: 79%;\r\n  height: 100%;\r\n  padding: 3px 20px;\r\n}\r\n\r\n.blinking {\r\n  animation: blinking linear 1s infinite;\r\n}\r\n\r\n@keyframes blinking {\r\n  0% {\r\n    filter: brightness(1);\r\n  }\r\n  50% {\r\n    filter: brightness(1.25);\r\n  }\r\n  100% {\r\n    filter: brightness(1);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,OAAAA,SAAA;AACA,OAAAC,IAAA;AACA;AACA;AACA,SAAAC,QAAA;AAEA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,OAAA;MACAC,qBAAA;IACA;EACA;EACAC,KAAA;IACAC,MAAA,WAAAA,CAAA;MACA,SAAAA,MAAA,CAAAC,IAAA;QACA,KAAAH,qBAAA;MACA;QACA,KAAAA,qBAAA;MACA;IACA;EACA;EACAI,QAAA;IACA,GAAAR,QAAA;MACAS,yBAAAC,KAAA;QACA,IAAAA,KAAA,CAAAC,gBAAA;UACA,IAAAD,KAAA,CAAAE,YAAA,CAAAC,MAAA,QAAAH,KAAA,CAAAI,QAAA,CAAAD,MAAA;YACA;UACA;YACA;UACA;QACA;UACA;QACA;MACA;MACAE,UAAA,EAAAL,KAAA,IAAAA,KAAA,CAAAM,WAAA,CAAAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,SAAA;MACA,KAAAC,MAAA,CAAAC,QAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,wBAAAJ,SAAA;IACA;IACAK,gBAAAC,SAAA;MACAC,OAAA,CAAAC,GAAA,uBAAAF,SAAA,CAAAG,YAAA;IACA;IACA;IACA;IACA;EACA;EACAC,YAAA;IACA/B,IAAA,CAAAgC,QAAA,CAAAC,GAAA,SAAAC,MAAA;MACA;MACAN,OAAA,CAAAC,GAAA,CAAAK,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}