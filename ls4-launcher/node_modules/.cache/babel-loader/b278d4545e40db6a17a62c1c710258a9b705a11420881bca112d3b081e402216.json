{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { uuid } from \"uuidv4\";\nimport generalTemplates from \"./soundTemplates/general\";\nconst Sound = {\n  install(Vue, {\n    store\n  }) {\n    this.EventBus = new Vue();\n    Vue.prototype.$sound = {\n      playingMusics: [],\n      musicEnabled: true,\n      toggleMusic(value) {\n        if (this.musicEnabled) {\n          this.stopAll(\"ALL\");\n        }\n        if (value) {\n          this.musicEnabled = value;\n        } else {\n          this.musicEnabled = !this.musicEnabled;\n        }\n        return this.musicEnabled;\n      },\n      getPath(params) {\n        let path;\n        if (params.local) {\n          path = \"static/audio/\";\n        } else {\n          const {\n            host,\n            port\n          } = store.state.config.download;\n          path = `${host}:${port}/audio/`;\n        }\n        switch (params.state) {\n          case \"CHAMPSELECT_GENERAL\":\n            path += \"champselect/\";\n            break;\n          case \"CHAMPSELECT_CLICK\":\n            path += \"champselect/click/\";\n            break;\n          case \"CHAMPSELECT_CHAMPIONS\":\n            path += \"champselect/champions/\";\n            break;\n          case \"CHAMPSELECT_MUSIC\":\n            path += \"champselect/music/\";\n            break;\n          case \"CHAMPSELECT_PHASE\":\n            path += \"champselect/phase/\";\n            break;\n          case \"LOGIN\":\n            path += \"login/\";\n            break;\n          case \"OVERVIEW\":\n            path += \"overview/\";\n            break;\n          case \"CORE_MUSIC\":\n            path += \"core/music/\";\n            break;\n          case \"CORE\":\n            path += \"core/\";\n            break;\n          default:\n            path += \"home/\";\n            break;\n        }\n        path += params.fileName;\n        return path;\n      },\n      play(params) {\n        const path = this.getPath(params);\n        const audio = new Audio(path);\n        if (!params.volume) {\n          audio.volume = 0.25;\n        } else {\n          audio.volume = params.volume;\n        }\n        if (params.type === \"MUSIC\") {\n          if (this.musicEnabled) {\n            let audioId = params.state + \"_\" + uuid();\n            if (params.loop && params.loop === true) {\n              audio.loop = true;\n              audioId += \"_LOOP\";\n            }\n            audio.onended = function () {\n              if (typeof this.playingMusics[audioId] !== undefined) {\n                delete this.playingMusics[audioId];\n              }\n            };\n            this.playingMusics[audioId] = audio;\n            audio.play();\n            return audioId;\n          }\n        } else {\n          audio.play();\n        }\n      },\n      asyncPlay(params) {\n        const path = this.getPath(params);\n        return new Promise((resolve, reject) => {\n          try {\n            const audio = new Audio(path);\n            audio.onended = function () {\n              resolve(true);\n            };\n            audio.play();\n          } catch (error) {\n            reject(error);\n          }\n        });\n      },\n      isPlaying(audioId) {\n        const audio = this.playingMusics[audioId];\n        return audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > audio.HAVE_CURRENT_DATA;\n      },\n      stop(audioId) {\n        if (this.isPlaying(audioId)) {\n          this.playingMusics[audioId].pause();\n          this.playingMusics[audioId].currentTime = 0;\n          delete this.playingMusics[audioId];\n        }\n      },\n      stopAll(state) {\n        for (let key in this.playingMusics) {\n          if (key.includes(state) || state === \"ALL\") {\n            this.playingMusics[key].pause();\n            this.playingMusics[key].currentTime = 0;\n            delete this.playingMusics[key];\n          }\n        }\n      },\n      stopAllLoops(state) {\n        for (let key in this.playingMusics) {\n          if (key.includes(\"LOOP\") && (key.includes(state) || state == \"ALL\")) {\n            if (this.isPlaying(key)) {\n              this.playingMusics[key].pause();\n              this.playingMusics[key].currentTime = 0;\n              delete this.playingMusics[key];\n            }\n          }\n        }\n      },\n      isMusicPlaying(state) {\n        Object.keys(this.playingMusics).forEach(c => {\n          if (c.includes(state)) {\n            return true;\n          }\n        });\n        return false;\n      },\n      template(templateId) {\n        let templates = {\n          ...generalTemplates\n        };\n        if (templates[templateId]) {\n          return this.play(templates[templateId]);\n        } else {\n          throw new Error(`Sound ${templateId} does not exist`);\n        }\n      }\n    };\n  }\n};\nexport default Sound;","map":{"version":3,"names":["uuid","generalTemplates","Sound","install","Vue","store","EventBus","prototype","$sound","playingMusics","musicEnabled","toggleMusic","value","stopAll","getPath","params","path","local","host","port","state","config","download","fileName","play","audio","Audio","volume","type","audioId","loop","onended","undefined","asyncPlay","Promise","resolve","reject","error","isPlaying","currentTime","paused","ended","readyState","HAVE_CURRENT_DATA","stop","pause","key","includes","stopAllLoops","isMusicPlaying","Object","keys","forEach","c","template","templateId","templates","Error"],"sources":["D:/game/lol/ls4/ls4-launcher/src/plugins/sound.js"],"sourcesContent":["import { uuid } from \"uuidv4\";\r\nimport generalTemplates from \"./soundTemplates/general\";\r\n\r\nconst Sound = {\r\n  install(Vue, { store }) {\r\n    this.EventBus = new Vue();\r\n\r\n    Vue.prototype.$sound = {\r\n      playingMusics: [],\r\n      musicEnabled: true,\r\n      toggleMusic(value) {\r\n        if (this.musicEnabled) {\r\n          this.stopAll(\"ALL\");\r\n        }\r\n\r\n        if (value) {\r\n          this.musicEnabled = value;\r\n        } else {\r\n          this.musicEnabled = !this.musicEnabled;\r\n        }\r\n\r\n        return this.musicEnabled;\r\n      },\r\n      getPath(params) {\r\n        let path;\r\n\r\n        if (params.local) {\r\n          path = \"static/audio/\";\r\n        } else {\r\n          const { host, port } = store.state.config.download;\r\n          path = `${host}:${port}/audio/`;\r\n        }\r\n\r\n        switch (params.state) {\r\n          case \"CHAMPSELECT_GENERAL\":\r\n            path += \"champselect/\";\r\n            break;\r\n          case \"CHAMPSELECT_CLICK\":\r\n            path += \"champselect/click/\";\r\n            break;\r\n          case \"CHAMPSELECT_CHAMPIONS\":\r\n            path += \"champselect/champions/\";\r\n            break;\r\n          case \"CHAMPSELECT_MUSIC\":\r\n            path += \"champselect/music/\";\r\n            break;\r\n          case \"CHAMPSELECT_PHASE\":\r\n            path += \"champselect/phase/\";\r\n            break;\r\n          case \"LOGIN\":\r\n            path += \"login/\";\r\n            break;\r\n          case \"OVERVIEW\":\r\n            path += \"overview/\";\r\n            break;\r\n          case \"CORE_MUSIC\":\r\n            path += \"core/music/\";\r\n            break;\r\n          case \"CORE\":\r\n            path += \"core/\";\r\n            break;\r\n          default:\r\n            path += \"home/\";\r\n            break;\r\n        }\r\n\r\n        path += params.fileName;\r\n\r\n        return path;\r\n      },\r\n      play(params) {\r\n        const path = this.getPath(params);\r\n\r\n        const audio = new Audio(path);\r\n        if (!params.volume) {\r\n          audio.volume = 0.25;\r\n        } else {\r\n          audio.volume = params.volume;\r\n        }\r\n\r\n        if (params.type === \"MUSIC\") {\r\n          if (this.musicEnabled) {\r\n            let audioId = params.state + \"_\" + uuid();\r\n\r\n            if (params.loop && params.loop === true) {\r\n              audio.loop = true;\r\n              audioId += \"_LOOP\";\r\n            }\r\n\r\n            audio.onended = function() {\r\n              if (typeof this.playingMusics[audioId] !== undefined) {\r\n                delete this.playingMusics[audioId];\r\n              }\r\n            };\r\n\r\n            this.playingMusics[audioId] = audio;\r\n            audio.play();\r\n            return audioId;\r\n          }\r\n        } else {\r\n          audio.play();\r\n        }\r\n      },\r\n      asyncPlay(params) {\r\n        const path = this.getPath(params);\r\n\r\n        return new Promise((resolve, reject) => {\r\n          try {\r\n            const audio = new Audio(path);\r\n            audio.onended = function() {\r\n              resolve(true);\r\n            };\r\n            audio.play();\r\n          } catch (error) {\r\n            reject(error);\r\n          }\r\n        });\r\n      },\r\n      isPlaying(audioId) {\r\n        const audio = this.playingMusics[audioId];\r\n        return (\r\n          audio.currentTime > 0 &&\r\n          !audio.paused &&\r\n          !audio.ended &&\r\n          audio.readyState > audio.HAVE_CURRENT_DATA\r\n        );\r\n      },\r\n      stop(audioId) {\r\n        if (this.isPlaying(audioId)) {\r\n          this.playingMusics[audioId].pause();\r\n          this.playingMusics[audioId].currentTime = 0;\r\n\r\n          delete this.playingMusics[audioId];\r\n        }\r\n      },\r\n      stopAll(state) {\r\n        for (let key in this.playingMusics) {\r\n          if (key.includes(state) || state === \"ALL\") {\r\n            this.playingMusics[key].pause();\r\n            this.playingMusics[key].currentTime = 0;\r\n\r\n            delete this.playingMusics[key];\r\n          }\r\n        }\r\n      },\r\n      stopAllLoops(state) {\r\n        for (let key in this.playingMusics) {\r\n          if (key.includes(\"LOOP\") && (key.includes(state) || state == \"ALL\")) {\r\n            if (this.isPlaying(key)) {\r\n              this.playingMusics[key].pause();\r\n              this.playingMusics[key].currentTime = 0;\r\n\r\n              delete this.playingMusics[key];\r\n            }\r\n          }\r\n        }\r\n      },\r\n      isMusicPlaying(state) {\r\n        Object.keys(this.playingMusics).forEach(c => {\r\n          if (c.includes(state)) {\r\n            return true;\r\n          }\r\n        });\r\n\r\n        return false;\r\n      },\r\n      template(templateId) {\r\n        let templates = { ...generalTemplates };\r\n\r\n        if (templates[templateId]) {\r\n          return this.play(templates[templateId]);\r\n        } else {\r\n          throw new Error(`Sound ${templateId} does not exist`);\r\n        }\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport default Sound;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}