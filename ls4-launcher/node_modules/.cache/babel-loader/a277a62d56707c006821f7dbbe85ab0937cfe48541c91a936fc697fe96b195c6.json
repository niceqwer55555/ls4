{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { mapState } from \"vuex\";\nimport CustomSelect from \"../components/CustomSelect.vue\";\nimport AllyPlayer from \"../components/ChampSelect/AllyPlayer.vue\";\nimport EnemyPlayer from \"../components/ChampSelect/EnemyPlayer.vue\";\nimport Champion from \"../components/ChampSelect/Champion.vue\";\nimport Skin from \"../components/ChampSelect/Skin.vue\";\nimport ChampionBan from \"../components/ChampSelect/ChampionBan.vue\";\nexport default {\n  components: {\n    AllyPlayer,\n    EnemyPlayer,\n    Champion,\n    Skin,\n    ChampionBan,\n    CustomSelect\n  },\n  mounted() {\n    this.$sound.template(\"CHAMPSELECT_INTRO\");\n    setTimeout(() => {\n      if (this.champselect.lobbyType === \"SUMMONERS_RIFT_DRAFT\") {\n        this.audioId = this.$sound.template(\"CHAMPSELECT_MUSIC_DRAFT\");\n      } else {\n        this.audioId = this.$sound.template(\"CHAMPSELECT_MUSIC_BLIND\");\n      }\n    }, 1750);\n  },\n  data() {\n    return {\n      skins: [],\n      skinCarouselPosition: 1,\n      stateTimer: null,\n      stateTime: 0,\n      selectedTab: \"CHAMPIONS\",\n      selectableSpells: 1,\n      selectedSpells: 0,\n      selectingSpell: null,\n      lastState: \"\",\n      wasTrading: false,\n      lastMessages: null,\n      audioId: null\n    };\n  },\n  created() {\n    this.$store.dispatch(\"getCollectionChampions\").then(champions => {\n      for (let champion in champions) {\n        new Audio(this.$sound.getPath({\n          type: \"SOUND\",\n          state: \"CHAMPSELECT_GENERAL\",\n          fileName: \"champions/\" + champions[champion].id + \".mp3\"\n        }));\n      }\n    });\n  },\n  methods: {\n    getCarouselStyle() {\n      return `--position:${this.skinCarouselPosition};`;\n    },\n    nextSkin() {\n      if (this.skinCarouselPosition != this.skins.length) {\n        this.skinCarouselPosition += 1;\n        this.selectSkin(this.skins[this.skinCarouselPosition - 1]);\n      }\n    },\n    previousSkin() {\n      if (this.skinCarouselPosition != 1) {\n        this.skinCarouselPosition -= 1;\n        this.selectSkin(this.skins[this.skinCarouselPosition - 1]);\n      }\n    },\n    selectSkin(skin) {\n      if (!skin.owned) return;\n      this.$socket.sendChampSelectMessage(\"CHAMPSELECT_SELECT_SKIN\", {\n        data: skin.name\n      }, (response, error) => {\n        if (error) {\n          console.log(\"Flyback error:\");\n          console.log(error);\n        }\n        this.$sound.template(\"CHAMPION_GRID_CLICK\");\n        console.log(\"SELECTED SKIN \" + skin.name + \" FROM CHAMPION \" + skin.championId);\n      });\n    },\n    showSpellModal(both, spellid = null) {\n      if (both) {\n        this.selectableSpells = 2;\n      } else {\n        this.selectableSpells = 1;\n        this.selectingSpell = spellid;\n      }\n      this.selectedSpells = 0;\n      if (!this.$refs.spellmodal.classList.contains(\"visible\")) {\n        this.$refs.spellmodal.classList.add(\"visible\");\n      } else {\n        this.$refs.spellmodal.classList.remove(\"visible\");\n      }\n    },\n    selectSpell(spell) {\n      if (this.selectableSpells == 2) {\n        if (this.selectedSpells === 0) {\n          // Selecting first spell, always spellid 1\n          this.$socket.sendChampSelectMessage(\"CHAMPSELECT_SELECT_SPELL_1\", {\n            data: this.convertSpell(spell)\n          }, (response, error) => {\n            if (error) {\n              console.log(\"Flyback error:\");\n              console.log(error);\n            }\n            this.selectedSpells = 1;\n            console.log(\"Changed spell 1 to \" + spell);\n          });\n        } else {\n          // Selecting second spell should close modal, always spellid 2\n          this.$socket.sendChampSelectMessage(\"CHAMPSELECT_SELECT_SPELL_2\", {\n            data: this.convertSpell(spell)\n          }, (response, error) => {\n            if (error) {\n              console.log(\"Flyback error:\");\n              console.log(error);\n            }\n            this.selectedSpells = 2;\n            console.log(\"Changed spell 2 to\" + spell);\n            this.$refs.spellmodal.classList.remove(\"visible\");\n          });\n        }\n      } else {\n        // Selected spell should close now, spellid is selectingspell\n        this.$refs.spellmodal.classList.remove(\"visible\");\n        this.$socket.sendChampSelectMessage(`CHAMPSELECT_SELECT_SPELL_${this.selectingSpell}`, {\n          data: this.convertSpell(spell)\n        }, (response, error) => {\n          if (error) {\n            console.log(\"Flyback error:\");\n            console.log(error);\n          }\n          console.log(\"Changed spell \" + this.selectingSpell + \" to \" + spell);\n          this.$refs.spellmodal.classList.remove(\"visible\");\n        });\n      }\n    },\n    convertSpell(spell, fromenum = false) {\n      if (fromenum) {\n        spell = spell.toLowerCase();\n        const parts = spell.split(\"_\");\n        parts.forEach((part, index) => {\n          parts[index] = part.charAt(0).toUpperCase() + part.slice(1);\n        });\n        return parts.join(\"\");\n      } else {\n        const parts = spell.match(/[A-z][a-z]+/g);\n        parts.forEach((part, index) => {\n          parts[index] = part.toUpperCase();\n        });\n        return parts.join(\"_\");\n      }\n    },\n    selectedRunePage() {\n      console.log(\"RUNEPAGE SELECTED\");\n    },\n    selectedMasteryPage() {\n      console.log(\"RUNEPAGE SELECTED\");\n    },\n    lockedInChampion() {\n      if (this.currentPlayer && !this.currentPlayer.selectedChampion) return;\n      this.$socket.sendChampSelectMessage(\"CHAMPSELECT_LOCK_CHAMPION\", {\n        data: this.currentPlayer.selectedChampion.id\n      }, (response, error) => {\n        if (error) {\n          console.log(\"Flyback error:\");\n          console.log(error);\n        }\n        this.$sound.template(\"LOCKIN_CLICK\");\n        console.log(\"LOCKED IN CHAMPION \" + this.currentPlayer.selectedChampion.id);\n        this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\n        this.selectedTab = \"SKINS\";\n        this.$sound.play({\n          type: \"SOUND\",\n          state: \"CHAMPSELECT_GENERAL\",\n          fileName: \"champions/\" + this.currentPlayer.selectedChampion.id + \".mp3\"\n        });\n      });\n    },\n    lockedInBan() {\n      if (this.currentPlayer && !this.currentPlayer.selectedChampion) return;\n      const bannedChampId = this.currentPlayer.selectedChampion.id;\n      this.$socket.sendChampSelectMessage(\"CHAMPSELECT_BAN_LOCK_CHAMPION\", {\n        data: this.currentPlayer.selectedChampion.id\n      }, (response, error) => {\n        if (error) {\n          console.log(\"Flyback error:\");\n          console.log(error);\n        }\n        this.$sound.template(\"LOCKIN_CLICK\");\n        console.log(\"BANNED CHAMPION \" + bannedChampId);\n      });\n    },\n    getSpell(spellid, spell = null) {\n      const {\n        host,\n        port\n      } = this.$store.state.config.download;\n      if (spellid === false) {\n        return `${host}:${port}/summoner_spells/${spell}.jpg`;\n      }\n      let spells = [\"SummonerHeal\", \"SummonerFlash\"];\n      if (this.currentPlayer.spell1) {\n        spells = [this.convertSpell(this.currentPlayer.spell1, true), this.convertSpell(this.currentPlayer.spell2, true)];\n      }\n      return `${host}:${port}/summoner_spells/${spells[spellid]}.jpg`;\n    },\n    getSkins(championId) {\n      let tempSkinsOwned = this.champions.find(c => c.id === championId).skins.owned;\n      let tempSkinsNotOwned = this.champions.find(c => c.id === championId).skins.notOwned;\n      tempSkinsOwned.forEach(e => {\n        e.championId = championId;\n        e.owned = true;\n      });\n      tempSkinsNotOwned.forEach(e => {\n        e.championId = championId;\n        e.owned = false;\n      });\n      return tempSkinsOwned.concat(tempSkinsNotOwned);\n    },\n    sendChatMessage() {\n      const input = this.$refs.chatInput;\n      const message = input.value;\n      if (message.trim() == \"\") return;\n      input.value = \"\";\n      this.$socket.sendChampSelectMessage(\"CHAMPSELECT_CHAT\", {\n        data: message\n      }, (response, error) => {\n        if (error) {\n          console.log(\"Flyback error:\");\n          console.log(error);\n        }\n        this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight;\n      });\n    },\n    getTeamState(name) {\n      if (!this.currentPlayer) return \"UNDEFINED\";\n      const allyteam = this.currentPlayer.team;\n      if (name == \"ALLY\") {\n        switch (this.globalState.phase) {\n          case \"PICK\":\n            if (this.globalState.team == \"BLIND\" && !this.didFullyLock(\"ALLY\")) {\n              return \"PICKING\";\n            } else if (this.globalState.team != \"BLIND\" && this.globalState.team == allyteam) {\n              return \"PICKING\";\n            } else {\n              return \"\";\n            }\n          case \"BAN\":\n            if (this.globalState.team == allyteam) {\n              return \"BANNING\";\n            } else {\n              return \"\";\n            }\n          default:\n            return \"\";\n        }\n      } else {\n        switch (this.globalState.phase) {\n          case \"PICK\":\n            if (this.globalState.team == \"BLIND\" && !this.didFullyLock(\"ENEMY\")) {\n              return \"PICKING\";\n            } else if (this.globalState.team != \"BLIND\" && this.globalState.team != allyteam) {\n              return \"PICKING\";\n            } else {\n              return \"\";\n            }\n          case \"BAN\":\n            if (this.globalState.team != allyteam) {\n              return \"BANNING\";\n            } else {\n              return \"\";\n            }\n          default:\n            return \"\";\n        }\n      }\n    },\n    didFullyLock(name) {\n      if (name == \"ALLY\") {\n        return this.champselect.team.filter(player => {\n          return !player.lockedIn;\n        }).length == 0;\n      } else {\n        return this.enemyTeam.filter(player => {\n          return !player.lockedIn;\n        }).length == 0;\n      }\n    },\n    getGlobalStateMessage() {\n      if (this.globalState.team == \"BLIND\") {\n        switch (this.globalState.phase) {\n          case \"PICK\":\n            if (this.currentPlayer.canLockIn) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_SELF\");\n            } else if (!this.didFullyLock(\"ALLY\")) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ALLY\");\n            } else {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ENEMY\");\n            }\n          case \"PRE\":\n            return this.$translate.textWithParams(\"CS_GLOBAL_STATE_GAME_START\", {\n              stateTime: this.stateTime\n            });\n          default:\n            return this.$translate.textWithParams(\"CS_GLOBAL_STATE_GAME_START\", {\n              stateTime: this.stateTime\n            });\n        }\n      } else {\n        switch (this.globalState.phase) {\n          case \"PICK\":\n            if (this.currentPlayer.canLockIn) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_SELF\");\n            } else if (this.currentPlayer.team == this.globalState.team) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ALLY\");\n            } else {\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ENEMY\");\n            }\n          case \"BAN\":\n            if (this.currentPlayer.canBan) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_SELF\");\n            } else if (this.currentPlayer.team == this.globalState.team) {\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_ALLY\");\n            } else {\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_ENEMY\");\n            }\n          case \"PRE\":\n            return this.$translate.textWithParams(\"CS_GLOBAL_STATE_GAME_START\", {\n              stateTime: this.stateTime\n            });\n          default:\n            return this.$translate.textWithParams(\"CS_GLOBAL_STATE_GAME_START\", {\n              stateTime: this.stateTime\n            });\n        }\n      }\n    },\n    typeAction() {\n      this.$store.dispatch(\"searchFilterChampions\", this.$refs.actionInput.value);\n    }\n  },\n  computed: mapState({\n    champions: state => state.collection.champions,\n    chatMessages: state => state.champselectMessages,\n    champselect: state => state.champselect,\n    enemyTeam: state => state.csEnemyTeam,\n    allyBans: state => state.csAllyBans,\n    enemyBans: state => state.csEnemyBans,\n    globalState: state => state.csGlobalState,\n    currentPlayer: state => state.csCurrentPlayer,\n    isTradingTarget: state => {\n      if (state.champselect == {}) return false;\n      const myTrades = state.champselect.tradesTeam.filter(trade => {\n        return trade.target.user.summonerName == state.csCurrentPlayer.user.summonerName;\n      });\n      if (myTrades.length == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    isTrading: state => {\n      if (state.champselect == {}) return false;\n      const myTrades = state.champselect.tradesTeam.filter(trade => {\n        return trade.initiator.user.summonerName == state.csCurrentPlayer.user.summonerName || trade.target.user.summonerName == state.csCurrentPlayer.user.summonerName;\n      });\n      if (myTrades.length == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    filteredChampions: state => {\n      return state.collection.champions.filter(c => c.shouldShow);\n    },\n    filteredSpells: state => {\n      return state.availableSpells.filter(c => {\n        if (state.champselect.lobbyType == \"ARAM_BLIND\") {\n          if (c === \"SummonerOdinGarrison\" || c === \"SummonerClairvoyance\" || c === \"SummonerTeleport\" || c === \"SummonerSmite\") {\n            return false;\n          }\n        } else {\n          if (c === \"SummonerOdinGarrison\") {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  }),\n  updated() {\n    if (this.wasTrading && !this.isTrading) {\n      this.wasTrading = false;\n      if (this.skins[0].championId != this.currentPlayer.selectedChampion.id) {\n        this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\n        this.skinCarouselPosition = 1;\n      }\n    } else if (!this.wasTrading && this.isTradingTarget) {\n      this.$sound.template(\"CHAMPSELECT_TRADE\");\n      this.wasTrading = true;\n    } else if (!this.wasTrading && this.isTrading) {\n      this.wasTrading = true;\n    }\n    if (this.champselect.lobbyType == \"ARAM_BLIND\" && !this.skins.length) {\n      this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\n      this.skinCarouselPosition = 1;\n      this.selectedTab = \"SKINS\";\n    }\n    if (this.lastMessages !== this.chatMessages.length) {\n      this.lastMessages = this.chatMessages.length;\n      this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight;\n    }\n    if (this.lastState == \"\") {\n      this.lastState = this.globalState ?? \"NOT DEFAULT\";\n      this.stateTime = this.globalState.time;\n      if (this.currentPlayer.canLockIn && !this.currentPlayer.lockedIn) {\n        this.$sound.template(\"CHAMPSELECT_YOURTURN\");\n      }\n      this.stateTimer = setInterval(() => {\n        if (this.stateTime <= 0) {\n          clearInterval(this.stateTimer);\n        } else {\n          this.stateTime--;\n        }\n      }, 1000);\n    } else if (this.lastState.team != this.globalState.team || this.lastState.time != this.globalState.time || this.lastState.phase == this.globalState.phase && this.champselect.enemyTeam.length == 0 && (this.lastState.bannedChampionsLength != this.globalState.bannedChampionsLength || this.lastState.pickedChampionsLength != this.globalState.pickedChampionsLength) // Kill me :) -> We're depending on different time's for the phases here.\n    ) {\n      clearInterval(this.stateTimer);\n      if (this.lastState.phase != this.globalState.phase) {\n        this.$sound.template(\"CHAMPSELECT_PHASECHANGE\");\n      }\n      if (this.currentPlayer.canLockIn && !this.currentPlayer.lockedIn) {\n        this.$sound.template(\"CHAMPSELECT_YOURTURN\");\n      }\n      this.lastState = this.globalState;\n      this.stateTime = this.globalState.time;\n      this.stateTimer = setInterval(() => {\n        if (this.stateTime == 1) {\n          this.$sound.template(\"CHAMPSELECT_EXIT\");\n        } else if (this.stateTime == 11) {\n          this.$sound.template(\"CHAMPSELECT_COUNTDOWN\");\n        }\n        if (this.stateTime <= 0) {\n          clearInterval(this.stateTimer);\n        } else {\n          this.stateTime--;\n        }\n      }, 1000);\n    }\n  },\n  beforeMount() {\n    this.$store.dispatch(\"changeBackgroundState\", \"CHAMPSELECT\");\n  },\n  beforeDestroy() {\n    this.$sound.stopAll(\"CHAMPSELECT\");\n    clearInterval(this.stateTimer);\n  }\n};","map":{"version":3,"names":["mapState","CustomSelect","AllyPlayer","EnemyPlayer","Champion","Skin","ChampionBan","components","mounted","$sound","template","setTimeout","champselect","lobbyType","audioId","data","skins","skinCarouselPosition","stateTimer","stateTime","selectedTab","selectableSpells","selectedSpells","selectingSpell","lastState","wasTrading","lastMessages","created","$store","dispatch","then","champions","champion","Audio","getPath","type","state","fileName","id","methods","getCarouselStyle","nextSkin","length","selectSkin","previousSkin","skin","owned","$socket","sendChampSelectMessage","name","response","error","console","log","championId","showSpellModal","both","spellid","$refs","spellmodal","classList","contains","add","remove","selectSpell","spell","convertSpell","fromenum","toLowerCase","parts","split","forEach","part","index","charAt","toUpperCase","slice","join","match","selectedRunePage","selectedMasteryPage","lockedInChampion","currentPlayer","selectedChampion","getSkins","play","lockedInBan","bannedChampId","getSpell","host","port","config","download","spells","spell1","spell2","tempSkinsOwned","find","c","tempSkinsNotOwned","notOwned","e","concat","sendChatMessage","input","chatInput","message","value","trim","chatMessages","scrollTop","scrollHeight","getTeamState","allyteam","team","globalState","phase","didFullyLock","filter","player","lockedIn","enemyTeam","getGlobalStateMessage","canLockIn","$translate","text","textWithParams","canBan","typeAction","actionInput","computed","collection","champselectMessages","csEnemyTeam","allyBans","csAllyBans","enemyBans","csEnemyBans","csGlobalState","csCurrentPlayer","isTradingTarget","myTrades","tradesTeam","trade","target","user","summonerName","isTrading","initiator","filteredChampions","shouldShow","filteredSpells","availableSpells","updated","time","setInterval","clearInterval","bannedChampionsLength","pickedChampionsLength","beforeMount","beforeDestroy","stopAll"],"sources":["src/views/ChampSelect.vue"],"sourcesContent":["<template>\r\n  <div id=\"champselect\">\r\n    <div class=\"side ally\">\r\n      <div class=\"head\">\r\n        {{ t(\"CS_ALLY_TEAM_TITLE\") }}\r\n      </div>\r\n      <div class=\"control\">\r\n        <AllyPlayer\r\n          v-for=\"(player, index) in champselect.team\"\r\n          :key=\"index\"\r\n          :player=\"player\"\r\n        />\r\n      </div>\r\n      <div class=\"foot\">\r\n        <div class=\"lolblock\">\r\n          <div class=\"head\">\r\n            {{ t(\"CS_BANNED_CHAMPS_TITLE\") }}\r\n          </div>\r\n          <div class=\"inner\">\r\n            <ChampionBan\r\n              v-for=\"(ban, index) in allyBans\"\r\n              :key=\"index\"\r\n              :ban=\"ban\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"main\">\r\n      <div class=\"head\">\r\n        <div class=\"phases\">\r\n          <div\r\n            class=\"phase\"\r\n            :class=\"{\r\n              inactive: this.globalState.phase != 'BAN',\r\n              active: this.globalState.phase == 'BAN'\r\n            }\"\r\n          >\r\n            {{ t(\"CS_PHASE_STATUS_BAN\") }}\r\n          </div>\r\n          <div\r\n            class=\"phase\"\r\n            :class=\"{\r\n              inactive: !['BAN', 'PICK'].includes(this.globalState.phase),\r\n              active: this.globalState.phase == 'PICK'\r\n            }\"\r\n          >\r\n            {{ t(\"CS_PHASE_STATUS_PICK\") }}\r\n          </div>\r\n          <div\r\n            class=\"phase\"\r\n            :class=\"{\r\n              active: this.globalState.phase == 'PRE'\r\n            }\"\r\n          >\r\n            {{ t(\"CS_PHASE_STATUS_FREE\") }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"control\">\r\n        <div class=\"status\">\r\n          <div\r\n            class=\"leftArrow arrow\"\r\n            :class=\"{\r\n              inactive: getTeamState('ALLY') == ''\r\n            }\"\r\n          >\r\n            <div class=\"timer\" v-if=\"getTeamState('ALLY') != ''\">\r\n              <i class=\"fal fa-clock\"></i>\r\n              {{ stateTime }}\r\n            </div>\r\n          </div>\r\n          <div class=\"info\">\r\n            <div class=\"infomessage\" v-html=\"getGlobalStateMessage()\"></div>\r\n          </div>\r\n          <div\r\n            class=\"rightArrow arrow\"\r\n            :class=\"{\r\n              inactive: getTeamState('ENEMY') == ''\r\n            }\"\r\n          >\r\n            <div class=\"timer\" v-if=\"getTeamState('ENEMY') != ''\">\r\n              {{ stateTime }}\r\n              <i class=\"fal fa-clock\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"champions\">\r\n          <div class=\"head\">\r\n            <div class=\"tabs\">\r\n              <button\r\n                :class=\"{ active: selectedTab == 'CHAMPIONS' }\"\r\n                @click=\"selectedTab = 'CHAMPIONS'\"\r\n              >\r\n                {{ t(\"CS_TAB_CHAMPIONS\") }}\r\n              </button>\r\n              <button\r\n                :class=\"{ active: selectedTab == 'SKINS' }\"\r\n                :disabled=\"!currentPlayer.lockedIn\"\r\n                @click=\"selectedTab = 'SKINS'\"\r\n              >\r\n                {{ t(\"CS_TAB_SKINS\") }}\r\n              </button>\r\n\r\n              <input\r\n                type=\"text\"\r\n                class=\"actionInput\"\r\n                ref=\"actionInput\"\r\n                :placeholder=\"t('CS_SEARCH_CHAMPION')\"\r\n                @keyup=\"typeAction\"\r\n              />\r\n            </div>\r\n            <div class=\"spacer\"></div>\r\n          </div>\r\n          <div class=\"list\" v-if=\"selectedTab == 'CHAMPIONS'\">\r\n            <Champion\r\n              v-for=\"(champion, index) in filteredChampions\"\r\n              :key=\"index\"\r\n              :champion=\"champion\"\r\n            />\r\n          </div>\r\n          <div class=\"list skins\" v-else>\r\n            <button @click=\"previousSkin\" class=\"arrow arrowPrevious\">\r\n              <i class=\"fas fa-chevron-left\"></i>\r\n            </button>\r\n            <button @click=\"nextSkin\" class=\"arrow arrowNext\">\r\n              <i class=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n            <div id=\"carousel\" :style=\"getCarouselStyle()\">\r\n              <Skin\r\n                :style=\"`--offset: ${index + 1};`\"\r\n                class=\"item\"\r\n                :class=\"{\r\n                  toRight: index + 1 > skinCarouselPosition,\r\n                  toLeft: index + 1 < skinCarouselPosition\r\n                }\"\r\n                v-for=\"(skin, index) in skins\"\r\n                :key=\"index\"\r\n                :skin=\"skin\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"footer\"></div>\r\n        </div>\r\n        <div class=\"actions\">\r\n          <div class=\"rmselect\">\r\n            <div class=\"title\">\r\n              {{ t(\"CS_LABEL_RUNES_MASTERIES\") }}\r\n            </div>\r\n            <button disabled class=\"editBtn disabled\">\r\n              <i class=\"fas fa-pencil\"></i>\r\n            </button>\r\n            <div class=\"selects\">\r\n              <CustomSelect\r\n                :options=\"['Runepage #1', 'Runepage #2', 'Runepage #3']\"\r\n                :default=\"'Runepage #1'\"\r\n                class=\"select\"\r\n                @input=\"selectedRunePage\"\r\n              />\r\n              <CustomSelect\r\n                :options=\"[\r\n                  'Masterypage #1',\r\n                  'Masterypage #2',\r\n                  'Masterypage #3'\r\n                ]\"\r\n                :default=\"'Masterypage #1'\"\r\n                class=\"select\"\r\n                style=\"z-index: -1\"\r\n                @input=\"selectedMasteryPage\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"spellselect\">\r\n            <div\r\n              v-bind:class=\"{\r\n                aram: this.champselect.lobbyType == 'ARAM_BLIND'\r\n              }\"\r\n              class=\"spellmodal\"\r\n              ref=\"spellmodal\"\r\n            >\r\n              <div\r\n                class=\"spell\"\r\n                v-for=\"(spell, index) in filteredSpells\"\r\n                :key=\"index\"\r\n                @click=\"selectSpell(spell)\"\r\n              >\r\n                <img :src=\"getSpell(false, spell)\" :alt=\"spell\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"title\">\r\n              {{ t(\"CS_LABEL_SPELLS\") }}\r\n            </div>\r\n            <div class=\"spells\">\r\n              <div class=\"spell\" @click=\"showSpellModal(false, 1)\">\r\n                <img :src=\"getSpell(0)\" alt=\"SummonerSpell1\" />\r\n              </div>\r\n              <div class=\"spell\" @click=\"showSpellModal(false, 2)\">\r\n                <img :src=\"getSpell(1)\" alt=\"SummonerSpell2\" />\r\n              </div>\r\n            </div>\r\n            <button @click=\"showSpellModal(true)\">\r\n              {{ t(\"CS_SPELLS_SELECTBOTH_BTN\") }}\r\n            </button>\r\n          </div>\r\n          <div class=\"lockin\">\r\n            <button\r\n              v-if=\"currentPlayer.canLockIn && !currentPlayer.lockedIn\"\r\n              @mouseover=\"$sound.template('LOCKIN_HOVER')\"\r\n              @click=\"lockedInChampion\"\r\n            >\r\n              {{ t(\"CS_ACTION_LOCK_IN\") }}\r\n            </button>\r\n            <button\r\n              class=\"banbtn\"\r\n              @mouseover=\"$sound.template('LOCKIN_HOVER')\"\r\n              @click=\"lockedInBan\"\r\n              v-else-if=\"currentPlayer.canBan\"\r\n            >\r\n              {{ t(\"CS_ACTION_BAN\") }}\r\n            </button>\r\n            <button disabled v-else>\r\n              {{ t(\"CS_ACTION_LOCK_IN\") }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"foot\">\r\n        <div class=\"lolblock\">\r\n          <div class=\"head\">\r\n            {{ t(\"CS_TEAMCHAT_TITLE\") }}\r\n          </div>\r\n          <div class=\"inner\">\r\n            <div class=\"messages\" ref=\"chatMessages\">\r\n              <div\r\n                class=\"message\"\r\n                v-for=\"(message, index) in chatMessages\"\r\n                :key=\"index\"\r\n              >\r\n                <span class=\"sender\">{{ message.from }}:</span>\r\n                <span class=\"text\">{{ message.data }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"input\">\r\n              <input\r\n                type=\"text\"\r\n                v-on:keyup.enter=\"sendChatMessage\"\r\n                ref=\"chatInput\"\r\n                :placeholder=\"t('CS_TEAMCHAT_PLACEHOLDER')\"\r\n              />\r\n              <button @click=\"sendChatMessage\">\r\n                {{ t(\"CS_TEAMCHAT_SEND_BTN\") }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"side enemy\">\r\n      <div class=\"head\">\r\n        {{ t(\"CS_ENEMY_TEAM_TITLE\") }}\r\n      </div>\r\n      <div class=\"control\">\r\n        <EnemyPlayer\r\n          v-for=\"(player, index) in enemyTeam\"\r\n          :key=\"index\"\r\n          :player=\"player\"\r\n          :index=\"index\"\r\n        />\r\n      </div>\r\n      <div class=\"foot\">\r\n        <div class=\"lolblock\">\r\n          <div class=\"head\">\r\n            {{ t(\"CS_BANNED_CHAMPS_TITLE\") }}\r\n          </div>\r\n          <div class=\"inner\">\r\n            <ChampionBan\r\n              v-for=\"(ban, index) in enemyBans\"\r\n              :key=\"index\"\r\n              :ban=\"ban\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport CustomSelect from \"../components/CustomSelect.vue\";\r\nimport AllyPlayer from \"../components/ChampSelect/AllyPlayer.vue\";\r\nimport EnemyPlayer from \"../components/ChampSelect/EnemyPlayer.vue\";\r\nimport Champion from \"../components/ChampSelect/Champion.vue\";\r\nimport Skin from \"../components/ChampSelect/Skin.vue\";\r\nimport ChampionBan from \"../components/ChampSelect/ChampionBan.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    AllyPlayer,\r\n    EnemyPlayer,\r\n    Champion,\r\n    Skin,\r\n    ChampionBan,\r\n    CustomSelect\r\n  },\r\n  mounted() {\r\n    this.$sound.template(\"CHAMPSELECT_INTRO\");\r\n    setTimeout(() => {\r\n      if (this.champselect.lobbyType === \"SUMMONERS_RIFT_DRAFT\") {\r\n        this.audioId = this.$sound.template(\"CHAMPSELECT_MUSIC_DRAFT\");\r\n      } else {\r\n        this.audioId = this.$sound.template(\"CHAMPSELECT_MUSIC_BLIND\");\r\n      }\r\n    }, 1750);\r\n  },\r\n  data() {\r\n    return {\r\n      skins: [],\r\n      skinCarouselPosition: 1,\r\n      stateTimer: null,\r\n      stateTime: 0,\r\n      selectedTab: \"CHAMPIONS\",\r\n      selectableSpells: 1,\r\n      selectedSpells: 0,\r\n      selectingSpell: null,\r\n      lastState: \"\",\r\n      wasTrading: false,\r\n      lastMessages: null,\r\n      audioId: null\r\n    };\r\n  },\r\n  created() {\r\n    this.$store.dispatch(\"getCollectionChampions\").then(champions => {\r\n      for (let champion in champions) {\r\n        new Audio(\r\n          this.$sound.getPath({\r\n            type: \"SOUND\",\r\n            state: \"CHAMPSELECT_GENERAL\",\r\n            fileName: \"champions/\" + champions[champion].id + \".mp3\"\r\n          })\r\n        );\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    getCarouselStyle() {\r\n      return `--position:${this.skinCarouselPosition};`;\r\n    },\r\n    nextSkin() {\r\n      if (this.skinCarouselPosition != this.skins.length) {\r\n        this.skinCarouselPosition += 1;\r\n        this.selectSkin(this.skins[this.skinCarouselPosition - 1]);\r\n      }\r\n    },\r\n    previousSkin() {\r\n      if (this.skinCarouselPosition != 1) {\r\n        this.skinCarouselPosition -= 1;\r\n        this.selectSkin(this.skins[this.skinCarouselPosition - 1]);\r\n      }\r\n    },\r\n    selectSkin(skin) {\r\n      if (!skin.owned) return;\r\n\r\n      this.$socket.sendChampSelectMessage(\r\n        \"CHAMPSELECT_SELECT_SKIN\",\r\n        { data: skin.name },\r\n        (response, error) => {\r\n          if (error) {\r\n            console.log(\"Flyback error:\");\r\n            console.log(error);\r\n          }\r\n          this.$sound.template(\"CHAMPION_GRID_CLICK\");\r\n          console.log(\r\n            \"SELECTED SKIN \" + skin.name + \" FROM CHAMPION \" + skin.championId\r\n          );\r\n        }\r\n      );\r\n    },\r\n    showSpellModal(both, spellid = null) {\r\n      if (both) {\r\n        this.selectableSpells = 2;\r\n      } else {\r\n        this.selectableSpells = 1;\r\n        this.selectingSpell = spellid;\r\n      }\r\n      this.selectedSpells = 0;\r\n\r\n      if (!this.$refs.spellmodal.classList.contains(\"visible\")) {\r\n        this.$refs.spellmodal.classList.add(\"visible\");\r\n      } else {\r\n        this.$refs.spellmodal.classList.remove(\"visible\");\r\n      }\r\n    },\r\n    selectSpell(spell) {\r\n      if (this.selectableSpells == 2) {\r\n        if (this.selectedSpells === 0) {\r\n          // Selecting first spell, always spellid 1\r\n          this.$socket.sendChampSelectMessage(\r\n            \"CHAMPSELECT_SELECT_SPELL_1\",\r\n            { data: this.convertSpell(spell) },\r\n            (response, error) => {\r\n              if (error) {\r\n                console.log(\"Flyback error:\");\r\n                console.log(error);\r\n              }\r\n              this.selectedSpells = 1;\r\n              console.log(\"Changed spell 1 to \" + spell);\r\n            }\r\n          );\r\n        } else {\r\n          // Selecting second spell should close modal, always spellid 2\r\n          this.$socket.sendChampSelectMessage(\r\n            \"CHAMPSELECT_SELECT_SPELL_2\",\r\n            { data: this.convertSpell(spell) },\r\n            (response, error) => {\r\n              if (error) {\r\n                console.log(\"Flyback error:\");\r\n                console.log(error);\r\n              }\r\n              this.selectedSpells = 2;\r\n              console.log(\"Changed spell 2 to\" + spell);\r\n              this.$refs.spellmodal.classList.remove(\"visible\");\r\n            }\r\n          );\r\n        }\r\n      } else {\r\n        // Selected spell should close now, spellid is selectingspell\r\n        this.$refs.spellmodal.classList.remove(\"visible\");\r\n        this.$socket.sendChampSelectMessage(\r\n          `CHAMPSELECT_SELECT_SPELL_${this.selectingSpell}`,\r\n          { data: this.convertSpell(spell) },\r\n          (response, error) => {\r\n            if (error) {\r\n              console.log(\"Flyback error:\");\r\n              console.log(error);\r\n            }\r\n            console.log(\r\n              \"Changed spell \" + this.selectingSpell + \" to \" + spell\r\n            );\r\n            this.$refs.spellmodal.classList.remove(\"visible\");\r\n          }\r\n        );\r\n      }\r\n    },\r\n    convertSpell(spell, fromenum = false) {\r\n      if (fromenum) {\r\n        spell = spell.toLowerCase();\r\n        const parts = spell.split(\"_\");\r\n        parts.forEach((part, index) => {\r\n          parts[index] = part.charAt(0).toUpperCase() + part.slice(1);\r\n        });\r\n        return parts.join(\"\");\r\n      } else {\r\n        const parts = spell.match(/[A-z][a-z]+/g);\r\n        parts.forEach((part, index) => {\r\n          parts[index] = part.toUpperCase();\r\n        });\r\n        return parts.join(\"_\");\r\n      }\r\n    },\r\n    selectedRunePage() {\r\n      console.log(\"RUNEPAGE SELECTED\");\r\n    },\r\n    selectedMasteryPage() {\r\n      console.log(\"RUNEPAGE SELECTED\");\r\n    },\r\n    lockedInChampion() {\r\n      if (this.currentPlayer && !this.currentPlayer.selectedChampion) return;\r\n      this.$socket.sendChampSelectMessage(\r\n        \"CHAMPSELECT_LOCK_CHAMPION\",\r\n        { data: this.currentPlayer.selectedChampion.id },\r\n        (response, error) => {\r\n          if (error) {\r\n            console.log(\"Flyback error:\");\r\n            console.log(error);\r\n          }\r\n          this.$sound.template(\"LOCKIN_CLICK\");\r\n          console.log(\r\n            \"LOCKED IN CHAMPION \" + this.currentPlayer.selectedChampion.id\r\n          );\r\n\r\n          this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\r\n          this.selectedTab = \"SKINS\";\r\n\r\n          this.$sound.play({\r\n            type: \"SOUND\",\r\n            state: \"CHAMPSELECT_GENERAL\",\r\n            fileName:\r\n              \"champions/\" + this.currentPlayer.selectedChampion.id + \".mp3\"\r\n          });\r\n        }\r\n      );\r\n    },\r\n    lockedInBan() {\r\n      if (this.currentPlayer && !this.currentPlayer.selectedChampion) return;\r\n      const bannedChampId = this.currentPlayer.selectedChampion.id;\r\n\r\n      this.$socket.sendChampSelectMessage(\r\n        \"CHAMPSELECT_BAN_LOCK_CHAMPION\",\r\n        { data: this.currentPlayer.selectedChampion.id },\r\n        (response, error) => {\r\n          if (error) {\r\n            console.log(\"Flyback error:\");\r\n            console.log(error);\r\n          }\r\n          this.$sound.template(\"LOCKIN_CLICK\");\r\n          console.log(\"BANNED CHAMPION \" + bannedChampId);\r\n        }\r\n      );\r\n    },\r\n    getSpell(spellid, spell = null) {\r\n      const { host, port } = this.$store.state.config.download;\r\n\r\n      if (spellid === false) {\r\n        return `${host}:${port}/summoner_spells/${spell}.jpg`;\r\n      }\r\n\r\n      let spells = [\"SummonerHeal\", \"SummonerFlash\"];\r\n      if (this.currentPlayer.spell1) {\r\n        spells = [\r\n          this.convertSpell(this.currentPlayer.spell1, true),\r\n          this.convertSpell(this.currentPlayer.spell2, true)\r\n        ];\r\n      }\r\n\r\n      return `${host}:${port}/summoner_spells/${spells[spellid]}.jpg`;\r\n    },\r\n    getSkins(championId) {\r\n      let tempSkinsOwned = this.champions.find(c => c.id === championId).skins\r\n        .owned;\r\n      let tempSkinsNotOwned = this.champions.find(c => c.id === championId)\r\n        .skins.notOwned;\r\n\r\n      tempSkinsOwned.forEach(e => {\r\n        e.championId = championId;\r\n        e.owned = true;\r\n      });\r\n\r\n      tempSkinsNotOwned.forEach(e => {\r\n        e.championId = championId;\r\n        e.owned = false;\r\n      });\r\n\r\n      return tempSkinsOwned.concat(tempSkinsNotOwned);\r\n    },\r\n    sendChatMessage() {\r\n      const input = this.$refs.chatInput;\r\n      const message = input.value;\r\n      if (message.trim() == \"\") return;\r\n\r\n      input.value = \"\";\r\n\r\n      this.$socket.sendChampSelectMessage(\r\n        \"CHAMPSELECT_CHAT\",\r\n        { data: message },\r\n        (response, error) => {\r\n          if (error) {\r\n            console.log(\"Flyback error:\");\r\n            console.log(error);\r\n          }\r\n          this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight;\r\n        }\r\n      );\r\n    },\r\n    getTeamState(name) {\r\n      if (!this.currentPlayer) return \"UNDEFINED\";\r\n\r\n      const allyteam = this.currentPlayer.team;\r\n\r\n      if (name == \"ALLY\") {\r\n        switch (this.globalState.phase) {\r\n          case \"PICK\":\r\n            if (\r\n              this.globalState.team == \"BLIND\" &&\r\n              !this.didFullyLock(\"ALLY\")\r\n            ) {\r\n              return \"PICKING\";\r\n            } else if (\r\n              this.globalState.team != \"BLIND\" &&\r\n              this.globalState.team == allyteam\r\n            ) {\r\n              return \"PICKING\";\r\n            } else {\r\n              return \"\";\r\n            }\r\n\r\n          case \"BAN\":\r\n            if (this.globalState.team == allyteam) {\r\n              return \"BANNING\";\r\n            } else {\r\n              return \"\";\r\n            }\r\n\r\n          default:\r\n            return \"\";\r\n        }\r\n      } else {\r\n        switch (this.globalState.phase) {\r\n          case \"PICK\":\r\n            if (\r\n              this.globalState.team == \"BLIND\" &&\r\n              !this.didFullyLock(\"ENEMY\")\r\n            ) {\r\n              return \"PICKING\";\r\n            } else if (\r\n              this.globalState.team != \"BLIND\" &&\r\n              this.globalState.team != allyteam\r\n            ) {\r\n              return \"PICKING\";\r\n            } else {\r\n              return \"\";\r\n            }\r\n\r\n          case \"BAN\":\r\n            if (this.globalState.team != allyteam) {\r\n              return \"BANNING\";\r\n            } else {\r\n              return \"\";\r\n            }\r\n\r\n          default:\r\n            return \"\";\r\n        }\r\n      }\r\n    },\r\n    didFullyLock(name) {\r\n      if (name == \"ALLY\") {\r\n        return (\r\n          this.champselect.team.filter(player => {\r\n            return !player.lockedIn;\r\n          }).length == 0\r\n        );\r\n      } else {\r\n        return (\r\n          this.enemyTeam.filter(player => {\r\n            return !player.lockedIn;\r\n          }).length == 0\r\n        );\r\n      }\r\n    },\r\n    getGlobalStateMessage() {\r\n      if (this.globalState.team == \"BLIND\") {\r\n        switch (this.globalState.phase) {\r\n          case \"PICK\":\r\n            if (this.currentPlayer.canLockIn) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_SELF\");\r\n            } else if (!this.didFullyLock(\"ALLY\")) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ALLY\");\r\n            } else {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ENEMY\");\r\n            }\r\n\r\n          case \"PRE\":\r\n            return this.$translate.textWithParams(\r\n              \"CS_GLOBAL_STATE_GAME_START\",\r\n              {\r\n                stateTime: this.stateTime\r\n              }\r\n            );\r\n\r\n          default:\r\n            return this.$translate.textWithParams(\r\n              \"CS_GLOBAL_STATE_GAME_START\",\r\n              {\r\n                stateTime: this.stateTime\r\n              }\r\n            );\r\n        }\r\n      } else {\r\n        switch (this.globalState.phase) {\r\n          case \"PICK\":\r\n            if (this.currentPlayer.canLockIn) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_SELF\");\r\n            } else if (this.currentPlayer.team == this.globalState.team) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ALLY\");\r\n            } else {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_PICK_ENEMY\");\r\n            }\r\n\r\n          case \"BAN\":\r\n            if (this.currentPlayer.canBan) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_SELF\");\r\n            } else if (this.currentPlayer.team == this.globalState.team) {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_ALLY\");\r\n            } else {\r\n              return this.$translate.text(\"CS_GLOBAL_STATE_BAN_ENEMY\");\r\n            }\r\n\r\n          case \"PRE\":\r\n            return this.$translate.textWithParams(\r\n              \"CS_GLOBAL_STATE_GAME_START\",\r\n              {\r\n                stateTime: this.stateTime\r\n              }\r\n            );\r\n\r\n          default:\r\n            return this.$translate.textWithParams(\r\n              \"CS_GLOBAL_STATE_GAME_START\",\r\n              {\r\n                stateTime: this.stateTime\r\n              }\r\n            );\r\n        }\r\n      }\r\n    },\r\n    typeAction() {\r\n      this.$store.dispatch(\r\n        \"searchFilterChampions\",\r\n        this.$refs.actionInput.value\r\n      );\r\n    }\r\n  },\r\n  computed: mapState({\r\n    champions: state => state.collection.champions,\r\n    chatMessages: state => state.champselectMessages,\r\n    champselect: state => state.champselect,\r\n    enemyTeam: state => state.csEnemyTeam,\r\n    allyBans: state => state.csAllyBans,\r\n    enemyBans: state => state.csEnemyBans,\r\n    globalState: state => state.csGlobalState,\r\n    currentPlayer: state => state.csCurrentPlayer,\r\n    isTradingTarget: state => {\r\n      if (state.champselect == {}) return false;\r\n\r\n      const myTrades = state.champselect.tradesTeam.filter(trade => {\r\n        return (\r\n          trade.target.user.summonerName ==\r\n          state.csCurrentPlayer.user.summonerName\r\n        );\r\n      });\r\n\r\n      if (myTrades.length == 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    isTrading: state => {\r\n      if (state.champselect == {}) return false;\r\n\r\n      const myTrades = state.champselect.tradesTeam.filter(trade => {\r\n        return (\r\n          trade.initiator.user.summonerName ==\r\n            state.csCurrentPlayer.user.summonerName ||\r\n          trade.target.user.summonerName ==\r\n            state.csCurrentPlayer.user.summonerName\r\n        );\r\n      });\r\n\r\n      if (myTrades.length == 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    filteredChampions: state => {\r\n      return state.collection.champions.filter(c => c.shouldShow);\r\n    },\r\n    filteredSpells: state => {\r\n      return state.availableSpells.filter(c => {\r\n        if (state.champselect.lobbyType == \"ARAM_BLIND\") {\r\n          if (\r\n            c === \"SummonerOdinGarrison\" ||\r\n            c === \"SummonerClairvoyance\" ||\r\n            c === \"SummonerTeleport\" ||\r\n            c === \"SummonerSmite\"\r\n          ) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (c === \"SummonerOdinGarrison\") {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n  }),\r\n  updated() {\r\n    if (this.wasTrading && !this.isTrading) {\r\n      this.wasTrading = false;\r\n      if (this.skins[0].championId != this.currentPlayer.selectedChampion.id) {\r\n        this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\r\n        this.skinCarouselPosition = 1;\r\n      }\r\n    } else if (!this.wasTrading && this.isTradingTarget) {\r\n      this.$sound.template(\"CHAMPSELECT_TRADE\");\r\n      this.wasTrading = true;\r\n    } else if (!this.wasTrading && this.isTrading) {\r\n      this.wasTrading = true;\r\n    }\r\n\r\n    if (this.champselect.lobbyType == \"ARAM_BLIND\" && !this.skins.length) {\r\n      this.skins = this.getSkins(this.currentPlayer.selectedChampion.id);\r\n      this.skinCarouselPosition = 1;\r\n      this.selectedTab = \"SKINS\";\r\n    }\r\n\r\n    if (this.lastMessages !== this.chatMessages.length) {\r\n      this.lastMessages = this.chatMessages.length;\r\n      this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight;\r\n    }\r\n\r\n    if (this.lastState == \"\") {\r\n      this.lastState = this.globalState ?? \"NOT DEFAULT\";\r\n      this.stateTime = this.globalState.time;\r\n\r\n      if (this.currentPlayer.canLockIn && !this.currentPlayer.lockedIn) {\r\n        this.$sound.template(\"CHAMPSELECT_YOURTURN\");\r\n      }\r\n\r\n      this.stateTimer = setInterval(() => {\r\n        if (this.stateTime <= 0) {\r\n          clearInterval(this.stateTimer);\r\n        } else {\r\n          this.stateTime--;\r\n        }\r\n      }, 1000);\r\n    } else if (\r\n      this.lastState.team != this.globalState.team ||\r\n      this.lastState.time != this.globalState.time ||\r\n      (this.lastState.phase == this.globalState.phase &&\r\n        this.champselect.enemyTeam.length == 0 &&\r\n        (this.lastState.bannedChampionsLength !=\r\n          this.globalState.bannedChampionsLength ||\r\n          this.lastState.pickedChampionsLength !=\r\n            this.globalState.pickedChampionsLength)) // Kill me :) -> We're depending on different time's for the phases here.\r\n    ) {\r\n      clearInterval(this.stateTimer);\r\n\r\n      if (this.lastState.phase != this.globalState.phase) {\r\n        this.$sound.template(\"CHAMPSELECT_PHASECHANGE\");\r\n      }\r\n\r\n      if (this.currentPlayer.canLockIn && !this.currentPlayer.lockedIn) {\r\n        this.$sound.template(\"CHAMPSELECT_YOURTURN\");\r\n      }\r\n\r\n      this.lastState = this.globalState;\r\n      this.stateTime = this.globalState.time;\r\n\r\n      this.stateTimer = setInterval(() => {\r\n        if (this.stateTime == 1) {\r\n          this.$sound.template(\"CHAMPSELECT_EXIT\");\r\n        } else if (this.stateTime == 11) {\r\n          this.$sound.template(\"CHAMPSELECT_COUNTDOWN\");\r\n        }\r\n\r\n        if (this.stateTime <= 0) {\r\n          clearInterval(this.stateTimer);\r\n        } else {\r\n          this.stateTime--;\r\n        }\r\n      }, 1000);\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.$store.dispatch(\"changeBackgroundState\", \"CHAMPSELECT\");\r\n  },\r\n  beforeDestroy() {\r\n    this.$sound.stopAll(\"CHAMPSELECT\");\r\n    clearInterval(this.stateTimer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n@import \"../assets/css/champselect.css\";\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}