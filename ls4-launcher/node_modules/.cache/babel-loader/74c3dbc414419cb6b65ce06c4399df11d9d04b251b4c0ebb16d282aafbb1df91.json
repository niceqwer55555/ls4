{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ipcRenderer } from \"electron\";\nimport generalTemplates from \"../plugins/soundTemplates/general\";\nexport default {\n  data() {\n    return {\n      clientpath: \"\",\n      cdnserverhost: \"127.0.0.1:8081/cdn\",\n      //\"cdn.leagues4.com\",\n      apiserverhost: \"127.0.0.1:8080\",\n      //\"api.leagues4.com\",\n      langcode: \"en_US\",\n      logindata: {\n        username: \"\",\n        password: \"\",\n        rememberme: 1\n      },\n      regdata: {\n        password: \"\",\n        summonername: \"\",\n        username: \"\",\n        email: \"\"\n      },\n      loading: false,\n      debugInput: \"\",\n      register: false,\n      showSettings: false,\n      updateStatus: \"\"\n    };\n  },\n  created() {\n    const router = this.$router;\n    this.$store.dispatch(\"readRememberToken\").then(loadedData => {\n      if (loadedData && loadedData.token) {\n        this.$store.dispatch(\"validateToken\", {\n          token: loadedData.token\n        }).then(() => {\n          router.push(\"/LoggedIn/home\");\n        }).catch(() => {\n          //Invalid / Expired remember token\n        });\n      } else if (loadedData) {\n        console.log(loadedData);\n        this.clientpath = loadedData.clientpath;\n        this.apiserverhost = loadedData.apiserverhost;\n        this.cdnserverhost = loadedData.cdnserverhost;\n        this.langcode = loadedData.langcode;\n      }\n    });\n    ipcRenderer.on(\"update\", (event, info) => {\n      this.updateStatus = info;\n    });\n    if (!this.$sound.isMusicPlaying(\"LOGIN\")) {\n      this.$sound.template(\"LOGIN_MUSIC\");\n    }\n  },\n  beforeMount() {\n    this.$store.dispatch(\"changeBackgroundState\", \"LOGIN\");\n  },\n  beforeDestroy() {\n    if (!this.register) {\n      this.$sound.stopAll(\"LOGIN\");\n    }\n  },\n  computed: {\n    languages() {\n      return this.$translate.getLanguages();\n    }\n  },\n  methods: {\n    onUpdate() {\n      ipcRenderer.invoke(\"checkForUpdate\");\n    },\n    changeLang(event) {\n      this.$translate.setLang(event.target.value);\n    },\n    openSettings() {\n      this.showSettings = !this.showSettings;\n    },\n    onFilePicker(e) {\n      e.preventDefault();\n      let that = this;\n      ipcRenderer.invoke(\"openFileDialog\").then(result => {\n        if (result) {\n          if (result.includes(\"League of Legends.exe\")) {\n            that.clientpath = result; //G:\\Games\\LoL-420\\RADS\\solutions\\lol_game_client_sln\\releases\\0.0.1.68\\deploy\\League of Legends.exe\n          } else {\n            that.clientpath = \"League of Legends executable invalid. (Download: https://github.com/LeagueSandbox/GameServer#manual-setup-windowsmac)\";\n          }\n        }\n      });\n    },\n    onSwitchAction(e) {\n      if (e) {\n        e.preventDefault();\n      }\n      let loading = this.loading;\n      if (loading) return;\n      this.debugInput = \"\";\n      this.register = !this.register;\n    },\n    onLogin(e) {\n      e.preventDefault();\n      let loading = this.loading;\n      if (loading) return;\n      const loginBtn = this.$refs.loginBtn;\n      const switchBtn = this.$refs.switchBtn;\n      const filepickerBtn = this.$refs.filepickerBtn;\n      const router = this.$router;\n      const that = this;\n      if (this.logindata.username == \"\") {\n        this.$refs.log_password.focus();\n        return;\n      }\n      if (this.logindata.password == \"\") {\n        this.$refs.log_password.focus();\n        return;\n      }\n      if (this.apiserverhost == \"\") {\n        if (!this.showSettings) this.showSettings = true;\n        this.$refs.stg_apiserverhost.focus();\n        return;\n      }\n      if (this.cdnserverhost == \"\") {\n        if (!this.showSettings) this.showSettings = true;\n        this.$refs.stg_cdnserverhost.focus();\n        return;\n      }\n      if (this.clientpath == \"\" || !this.clientpath.includes(\"League of Legends.exe\")) {\n        if (!this.showSettings) this.showSettings = true;\n        this.$refs.stg_clientpath.focus();\n        return;\n      }\n      loading = true;\n      loginBtn.disabled = true;\n      switchBtn.disabled = true;\n      filepickerBtn.disabled = true;\n      this.$store.dispatch(\"logUserIn\", {\n        username: this.logindata.username,\n        password: this.logindata.password,\n        apiserverhost: this.apiserverhost,\n        cdnserverhost: this.cdnserverhost,\n        rememberme: this.logindata.rememberme,\n        clientpath: this.clientpath,\n        langcode: this.langcode\n      }).then(function () {\n        that.$sound.template(\"LOGIN_ACTION\");\n        router.push(\"/LoggedIn\");\n        loading = false;\n        loginBtn.disabled = false;\n        switchBtn.disabled = false;\n        filepickerBtn.disabled = false;\n        for (let key in generalTemplates) {\n          new Audio(that.$sound.getPath(generalTemplates[key]));\n        }\n      }).catch(function (err) {\n        loading = false;\n        loginBtn.disabled = false;\n        switchBtn.disabled = false;\n        filepickerBtn.disabled = false;\n        that.debugInput = err;\n        console.error(err);\n      });\n    },\n    onRegister(e) {\n      e.preventDefault();\n      let loading = this.loading;\n      if (loading) return;\n      const switchBtn = this.$refs.switchBtn;\n      const registerBtn = this.$refs.registerBtn;\n      const that = this;\n      if (this.regdata.email == \"\") {\n        this.$refs.reg_email.focus();\n        return;\n      }\n      if (this.regdata.username == \"\") {\n        this.$refs.reg_username.focus();\n        return;\n      }\n      if (this.regdata.password == \"\") {\n        this.$refs.reg_password.focus();\n        return;\n      }\n      if (this.regdata.summonername == \"\") {\n        this.$refs.reg_summonername.focus();\n        return;\n      }\n      if (this.regapiserverhost == \"\") {\n        if (!this.showSettings) this.showSettings = true;\n        this.$refs.stg_apiserverhost.focus();\n        return;\n      }\n      loading = true;\n      switchBtn.disabled = true;\n      registerBtn.disabled = true;\n      this.$store.dispatch(\"registerUser\", {\n        email: this.regdata.email,\n        username: this.regdata.username,\n        password: this.regdata.password,\n        summonername: this.regdata.summonername,\n        apiserverhost: this.apiserverhost\n      }).then(function () {\n        that.onSwitchAction();\n        loading = false;\n        switchBtn.disabled = false;\n        registerBtn.disabled = false;\n      }).catch(function (err) {\n        loading = false;\n        switchBtn.disabled = false;\n        registerBtn.disabled = false;\n        that.debugInput = err;\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["ipcRenderer","generalTemplates","data","clientpath","cdnserverhost","apiserverhost","langcode","logindata","username","password","rememberme","regdata","summonername","email","loading","debugInput","register","showSettings","updateStatus","created","router","$router","$store","dispatch","then","loadedData","token","push","catch","console","log","on","event","info","$sound","isMusicPlaying","template","beforeMount","beforeDestroy","stopAll","computed","languages","$translate","getLanguages","methods","onUpdate","invoke","changeLang","setLang","target","value","openSettings","onFilePicker","e","preventDefault","that","result","includes","onSwitchAction","onLogin","loginBtn","$refs","switchBtn","filepickerBtn","log_password","focus","stg_apiserverhost","stg_cdnserverhost","stg_clientpath","disabled","key","Audio","getPath","err","error","onRegister","registerBtn","reg_email","reg_username","reg_password","reg_summonername","regapiserverhost"],"sources":["src/views/LoginPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <div class=\"provider-logo\">\r\n      <video src=\"static/anims/general/l4s_logo.webm\" autoplay loop></video>\r\n    </div>\r\n    <div class=\"loginbox mockbox\" v-show=\"!register\">\r\n      <div class=\"head\">\r\n        <p>{{ t(\"LOGIN_LOGIN_TITLE\") }}</p>\r\n      </div>\r\n      <div class=\"inner\">\r\n        <div class=\"formGroup\">\r\n          <label for=\"usernameInput\">\r\n            {{ t(\"LOGIN_USERNAME\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"usernameInput\"\r\n            :placeholder=\"t('LOGIN_USERNAME')\"\r\n            v-model=\"logindata.username\"\r\n            ref=\"log_username\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <label for=\"passwordInput\">\r\n            {{ t(\"LOGIN_PASSWORD\") }}\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordInput\"\r\n            v-model=\"logindata.password\"\r\n            :placeholder=\"t('LOGIN_PASSWORD')\"\r\n            v-on:keyup.enter=\"onLogin\"\r\n            ref=\"log_password\"\r\n          />\r\n        </div>\r\n        <div class=\"submitGroup\">\r\n          <div class=\"remember\">\r\n            <label for=\"rememberCheck\" class=\"league-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"rememberCheck\"\r\n                v-model=\"logindata.rememberme\"\r\n                value=\"1\"\r\n              />\r\n              {{ t(\"LOGIN_REMEMBER_ALL\") }}\r\n              <span class=\"checkmark\"></span>\r\n            </label>\r\n          </div>\r\n          <div class=\"login\">\r\n            <button class=\"loginBtn\" @click=\"onLogin\" ref=\"loginBtn\">\r\n              {{ t(\"LOGIN_LOGIN_BTN\") }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"foot\">\r\n        <p>\r\n          {{ t(\"LOGIN_REGSWITCH_QUESTION\") }}\r\n          <a @click=\"onSwitchAction\" ref=\"switchBtn\">{{\r\n            t(\"LOGIN_REGSWITCH_BTN\")\r\n          }}</a>\r\n        </p>\r\n        <p class=\"warning\">\r\n          {{ t(\"LOGIN_SETTINGS_NOTICE\") }}\r\n        </p>\r\n        <button class=\"settingsBtn\" @click=\"openSettings\">\r\n          <img src=\"@/assets/icons/cogs-duotone.svg\" />\r\n        </button>\r\n        <p class=\"error\">{{ debugInput }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"loginbox mockbox register\" v-show=\"register\">\r\n      <div class=\"head\">\r\n        <p>{{ t(\"LOGIN_REGISTER_TITLE\") }}</p>\r\n      </div>\r\n      <div class=\"inner\">\r\n        <div class=\"formGroup\">\r\n          <label for=\"emailInput\">\r\n            {{ t(\"LOGIN_EMAIL\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"emailInput\"\r\n            :placeholder=\"t('LOGIN_EMAIL')\"\r\n            v-model=\"regdata.email\"\r\n            ref=\"reg_email\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <label for=\"usernameInput2\">\r\n            {{ t(\"LOGIN_USERNAME\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"usernameInput2\"\r\n            :placeholder=\"t('LOGIN_USERNAME')\"\r\n            v-model=\"regdata.username\"\r\n            ref=\"reg_username\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <label for=\"passwordInput2\">\r\n            {{ t(\"LOGIN_PASSWORD\") }}\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordInput2\"\r\n            :placeholder=\"t('LOGIN_PASSWORD')\"\r\n            v-model=\"regdata.password\"\r\n            ref=\"reg_password\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <label for=\"summonerNameInput\">\r\n            {{ t(\"LOGIN_SUMMONER_NAME\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"summonerNameInput\"\r\n            :placeholder=\"t('LOGIN_SUMMONER_NAME')\"\r\n            v-model=\"regdata.summonername\"\r\n            ref=\"reg_summonername\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"submitGroup\">\r\n          <div class=\"login\">\r\n            <button class=\"registerBtn\" @click=\"onRegister\" ref=\"registerBtn\">\r\n              {{ t(\"LOGIN_REGISTER_BTN\") }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"foot\">\r\n        <button class=\"settingsBtn\" @click=\"openSettings\">\r\n          <img src=\"@/assets/icons/cogs-duotone.svg\" />\r\n        </button>\r\n        <p>\r\n          {{ t(\"LOGIN_LOGSWITCH_QUESTION\") }}\r\n          <a @click=\"onSwitchAction\" ref=\"switchBtn\">{{\r\n            t(\"LOGIN_LOGSWITCH_BTN\")\r\n          }}</a>\r\n        </p>\r\n        <p class=\"error\">{{ debugInput }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settingsbox mockbox\" v-bind:class=\"{ active: showSettings }\">\r\n      <div class=\"head\">\r\n        <p>{{ t(\"LOGIN_SETTINGS_TITLE\") }}</p>\r\n      </div>\r\n      <div class=\"inner\">\r\n        <div class=\"formGroup\">\r\n          <label for=\"apiServerHostInput\">\r\n            {{ t(\"LOGIN_API_IP\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"apiServerHostInput\"\r\n            placeholder=\"127.0.0.1\"\r\n            ref=\"stg_apiserverhost\"\r\n            v-model=\"apiserverhost\"\r\n          />\r\n        </div>\r\n        <div class=\"formGroup\">\r\n          <label for=\"cdnServerHostInput\">\r\n            {{ t(\"LOGIN_CDN_IP\") }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"cdnServerHostInput\"\r\n            placeholder=\"127.0.0.1\"\r\n            ref=\"stg_cdnserverhost\"\r\n            v-model=\"cdnserverhost\"\r\n          />\r\n        </div>\r\n        <div class=\"formGroup\">\r\n          <label for=\"locale\">\r\n            {{ t(\"LOGIN_SETTINGS_LANGUAGE\") }}\r\n          </label>\r\n          <select @change=\"changeLang($event)\" v-model=\"langcode\" id=\"\">\r\n            <option\r\n              :selected=\"lang.code == 'en_US'\"\r\n              :value=\"lang.code\"\r\n              v-for=\"lang in languages\"\r\n              :key=\"lang.code\"\r\n              >{{ lang.language }} - {{ lang.code }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n        <div class=\"formGroup filePicker\">\r\n          <label for=\"clientPathInput\">\r\n            {{ t(\"LOGIN_LOL_EXEPATH\") }}\r\n          </label>\r\n          <div class=\"pickerWrapper\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"clientPathInput\"\r\n              v-model=\"clientpath\"\r\n              ref=\"stg_clientpath\"\r\n            />\r\n            <button\r\n              @click=\"onFilePicker\"\r\n              class=\"filepicker-button\"\r\n              ref=\"filepickerBtn\"\r\n            >\r\n              <img src=\"@/assets/icons/file-search-duotone.svg\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"formGroup updater\">\r\n          <label for=\"updateButton\">\r\n            {{ t(\"CHECK_FOR_UPDATE\") }}\r\n          </label>\r\n          <div class=\"updateWrapper\">\r\n            <button\r\n              @click=\"onUpdate\"\r\n              class=\"update-button\"\r\n              ref=\"updateBtn\"\r\n              id=\"updateButton\"\r\n            >\r\n              <i class=\"fas fa-sync-alt\"></i>\r\n            </button>\r\n            <p class=\"updateStatus\">{{ updateStatus }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ipcRenderer } from \"electron\";\r\nimport generalTemplates from \"../plugins/soundTemplates/general\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      clientpath: \"\",\r\n      cdnserverhost: \"127.0.0.1:8081/cdn\", //\"cdn.leagues4.com\",\r\n      apiserverhost: \"127.0.0.1:8080\", //\"api.leagues4.com\",\r\n      langcode: \"en_US\",\r\n      logindata: {\r\n        username: \"\",\r\n        password: \"\",\r\n        rememberme: 1\r\n      },\r\n      regdata: {\r\n        password: \"\",\r\n        summonername: \"\",\r\n        username: \"\",\r\n        email: \"\"\r\n      },\r\n      loading: false,\r\n      debugInput: \"\",\r\n      register: false,\r\n      showSettings: false,\r\n      updateStatus: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    const router = this.$router;\r\n    this.$store.dispatch(\"readRememberToken\").then(loadedData => {\r\n      if (loadedData && loadedData.token) {\r\n        this.$store\r\n          .dispatch(\"validateToken\", {\r\n            token: loadedData.token\r\n          })\r\n          .then(() => {\r\n            router.push(\"/LoggedIn/home\");\r\n          })\r\n          .catch(() => {\r\n            //Invalid / Expired remember token\r\n          });\r\n      } else if (loadedData) {\r\n        console.log(loadedData);\r\n        this.clientpath = loadedData.clientpath;\r\n        this.apiserverhost = loadedData.apiserverhost;\r\n        this.cdnserverhost = loadedData.cdnserverhost;\r\n        this.langcode = loadedData.langcode;\r\n      }\r\n    });\r\n\r\n    ipcRenderer.on(\"update\", (event, info) => {\r\n      this.updateStatus = info;\r\n    });\r\n\r\n    if (!this.$sound.isMusicPlaying(\"LOGIN\")) {\r\n      this.$sound.template(\"LOGIN_MUSIC\");\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.$store.dispatch(\"changeBackgroundState\", \"LOGIN\");\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.register) {\r\n      this.$sound.stopAll(\"LOGIN\");\r\n    }\r\n  },\r\n  computed: {\r\n    languages() {\r\n      return this.$translate.getLanguages();\r\n    }\r\n  },\r\n  methods: {\r\n    onUpdate() {\r\n      ipcRenderer.invoke(\"checkForUpdate\");\r\n    },\r\n    changeLang(event) {\r\n      this.$translate.setLang(event.target.value);\r\n    },\r\n    openSettings() {\r\n      this.showSettings = !this.showSettings;\r\n    },\r\n    onFilePicker(e) {\r\n      e.preventDefault();\r\n\r\n      let that = this;\r\n\r\n      ipcRenderer.invoke(\"openFileDialog\").then(result => {\r\n        if (result) {\r\n          if (result.includes(\"League of Legends.exe\")) {\r\n            that.clientpath = result; //G:\\Games\\LoL-420\\RADS\\solutions\\lol_game_client_sln\\releases\\0.0.1.68\\deploy\\League of Legends.exe\r\n          }\r\n          else {\r\n            that.clientpath = \"League of Legends executable invalid. (Download: https://github.com/LeagueSandbox/GameServer#manual-setup-windowsmac)\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n    onSwitchAction(e) {\r\n      if (e) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      let loading = this.loading;\r\n      if (loading) return;\r\n\r\n      this.debugInput = \"\";\r\n      this.register = !this.register;\r\n    },\r\n    onLogin(e) {\r\n      e.preventDefault();\r\n      let loading = this.loading;\r\n      if (loading) return;\r\n\r\n      const loginBtn = this.$refs.loginBtn;\r\n      const switchBtn = this.$refs.switchBtn;\r\n      const filepickerBtn = this.$refs.filepickerBtn;\r\n      const router = this.$router;\r\n      const that = this;\r\n\r\n      if (this.logindata.username == \"\") {\r\n        this.$refs.log_password.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.logindata.password == \"\") {\r\n        this.$refs.log_password.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.apiserverhost == \"\") {\r\n        if (!this.showSettings) this.showSettings = true;\r\n        this.$refs.stg_apiserverhost.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.cdnserverhost == \"\") {\r\n        if (!this.showSettings) this.showSettings = true;\r\n        this.$refs.stg_cdnserverhost.focus();\r\n        return;\r\n      }\r\n\r\n      if (\r\n        this.clientpath == \"\" ||\r\n        !this.clientpath.includes(\"League of Legends.exe\")\r\n      ) {\r\n        if (!this.showSettings) this.showSettings = true;\r\n        this.$refs.stg_clientpath.focus();\r\n        return;\r\n      }\r\n\r\n      loading = true;\r\n      loginBtn.disabled = true;\r\n      switchBtn.disabled = true;\r\n      filepickerBtn.disabled = true;\r\n\r\n      this.$store\r\n        .dispatch(\"logUserIn\", {\r\n          username: this.logindata.username,\r\n          password: this.logindata.password,\r\n          apiserverhost: this.apiserverhost,\r\n          cdnserverhost: this.cdnserverhost,\r\n          rememberme: this.logindata.rememberme,\r\n          clientpath: this.clientpath,\r\n          langcode: this.langcode\r\n        })\r\n        .then(function() {\r\n          that.$sound.template(\"LOGIN_ACTION\");\r\n\r\n          router.push(\"/LoggedIn\");\r\n          loading = false;\r\n          loginBtn.disabled = false;\r\n          switchBtn.disabled = false;\r\n          filepickerBtn.disabled = false;\r\n\r\n          for (let key in generalTemplates) {\r\n            new Audio(that.$sound.getPath(generalTemplates[key]));\r\n          }\r\n        })\r\n        .catch(function(err) {\r\n          loading = false;\r\n          loginBtn.disabled = false;\r\n          switchBtn.disabled = false;\r\n          filepickerBtn.disabled = false;\r\n\r\n          that.debugInput = err;\r\n\r\n          console.error(err);\r\n        });\r\n    },\r\n    onRegister(e) {\r\n      e.preventDefault();\r\n      let loading = this.loading;\r\n      if (loading) return;\r\n\r\n      const switchBtn = this.$refs.switchBtn;\r\n      const registerBtn = this.$refs.registerBtn;\r\n      const that = this;\r\n\r\n      if (this.regdata.email == \"\") {\r\n        this.$refs.reg_email.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.regdata.username == \"\") {\r\n        this.$refs.reg_username.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.regdata.password == \"\") {\r\n        this.$refs.reg_password.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.regdata.summonername == \"\") {\r\n        this.$refs.reg_summonername.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.regapiserverhost == \"\") {\r\n        if (!this.showSettings) this.showSettings = true;\r\n        this.$refs.stg_apiserverhost.focus();\r\n        return;\r\n      }\r\n\r\n      loading = true;\r\n      switchBtn.disabled = true;\r\n      registerBtn.disabled = true;\r\n      this.$store\r\n        .dispatch(\"registerUser\", {\r\n          email: this.regdata.email,\r\n          username: this.regdata.username,\r\n          password: this.regdata.password,\r\n          summonername: this.regdata.summonername,\r\n          apiserverhost: this.apiserverhost\r\n        })\r\n        .then(function() {\r\n          that.onSwitchAction();\r\n          loading = false;\r\n          switchBtn.disabled = false;\r\n          registerBtn.disabled = false;\r\n        })\r\n        .catch(function(err) {\r\n          loading = false;\r\n          switchBtn.disabled = false;\r\n          registerBtn.disabled = false;\r\n\r\n          that.debugInput = err;\r\n\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/login.css\"></style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}